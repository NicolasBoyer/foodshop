/**
 * @license
 * Copyright 2019 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const X=globalThis,ye=X.ShadowRoot&&(X.ShadyCSS===void 0||X.ShadyCSS.nativeShadow)&&"adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype,je=Symbol(),Ce=new WeakMap;let rt=class{constructor(e,t,s){if(this._$cssResult$=!0,s!==je)throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");this.cssText=e,this.t=t}get styleSheet(){let e=this.o;const t=this.t;if(ye&&e===void 0){const s=t!==void 0&&t.length===1;s&&(e=Ce.get(t)),e===void 0&&((this.o=e=new CSSStyleSheet).replaceSync(this.cssText),s&&Ce.set(t,e))}return e}toString(){return this.cssText}};const ot=i=>new rt(typeof i=="string"?i:i+"",void 0,je),at=(i,e)=>{if(ye)i.adoptedStyleSheets=e.map(t=>t instanceof CSSStyleSheet?t:t.styleSheet);else for(const t of e){const s=document.createElement("style"),n=X.litNonce;n!==void 0&&s.setAttribute("nonce",n),s.textContent=t.cssText,i.appendChild(s)}},_e=ye?i=>i:i=>i instanceof CSSStyleSheet?(e=>{let t="";for(const s of e.cssRules)t+=s.cssText;return ot(t)})(i):i;/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const{is:dt,defineProperty:ct,getOwnPropertyDescriptor:lt,getOwnPropertyNames:ht,getOwnPropertySymbols:ut,getPrototypeOf:gt}=Object,te=globalThis,Me=te.trustedTypes,pt=Me?Me.emptyScript:"",ft=te.reactiveElementPolyfillSupport,U=(i,e)=>i,ce={toAttribute(i,e){switch(e){case Boolean:i=i?pt:null;break;case Object:case Array:i=i==null?i:JSON.stringify(i)}return i},fromAttribute(i,e){let t=i;switch(e){case Boolean:t=i!==null;break;case Number:t=i===null?null:Number(i);break;case Object:case Array:try{t=JSON.parse(i)}catch{t=null}}return t}},We=(i,e)=>!dt(i,e),Ie={attribute:!0,type:String,converter:ce,reflect:!1,hasChanged:We};Symbol.metadata??=Symbol("metadata"),te.litPropertyMetadata??=new WeakMap;class O extends HTMLElement{static addInitializer(e){this._$Ei(),(this.l??=[]).push(e)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(e,t=Ie){if(t.state&&(t.attribute=!1),this._$Ei(),this.elementProperties.set(e,t),!t.noAccessor){const s=Symbol(),n=this.getPropertyDescriptor(e,s,t);n!==void 0&&ct(this.prototype,e,n)}}static getPropertyDescriptor(e,t,s){const{get:n,set:r}=lt(this.prototype,e)??{get(){return this[t]},set(o){this[t]=o}};return{get(){return n?.call(this)},set(o){const c=n?.call(this);r.call(this,o),this.requestUpdate(e,c,s)},configurable:!0,enumerable:!0}}static getPropertyOptions(e){return this.elementProperties.get(e)??Ie}static _$Ei(){if(this.hasOwnProperty(U("elementProperties")))return;const e=gt(this);e.finalize(),e.l!==void 0&&(this.l=[...e.l]),this.elementProperties=new Map(e.elementProperties)}static finalize(){if(this.hasOwnProperty(U("finalized")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(U("properties"))){const t=this.properties,s=[...ht(t),...ut(t)];for(const n of s)this.createProperty(n,t[n])}const e=this[Symbol.metadata];if(e!==null){const t=litPropertyMetadata.get(e);if(t!==void 0)for(const[s,n]of t)this.elementProperties.set(s,n)}this._$Eh=new Map;for(const[t,s]of this.elementProperties){const n=this._$Eu(t,s);n!==void 0&&this._$Eh.set(n,t)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(e){const t=[];if(Array.isArray(e)){const s=new Set(e.flat(1/0).reverse());for(const n of s)t.unshift(_e(n))}else e!==void 0&&t.push(_e(e));return t}static _$Eu(e,t){const s=t.attribute;return s===!1?void 0:typeof s=="string"?s:typeof e=="string"?e.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise(e=>this.enableUpdating=e),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach(e=>e(this))}addController(e){(this._$EO??=new Set).add(e),this.renderRoot!==void 0&&this.isConnected&&e.hostConnected?.()}removeController(e){this._$EO?.delete(e)}_$E_(){const e=new Map,t=this.constructor.elementProperties;for(const s of t.keys())this.hasOwnProperty(s)&&(e.set(s,this[s]),delete this[s]);e.size>0&&(this._$Ep=e)}createRenderRoot(){const e=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return at(e,this.constructor.elementStyles),e}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach(e=>e.hostConnected?.())}enableUpdating(e){}disconnectedCallback(){this._$EO?.forEach(e=>e.hostDisconnected?.())}attributeChangedCallback(e,t,s){this._$AK(e,s)}_$EC(e,t){const s=this.constructor.elementProperties.get(e),n=this.constructor._$Eu(e,s);if(n!==void 0&&s.reflect===!0){const r=(s.converter?.toAttribute!==void 0?s.converter:ce).toAttribute(t,s.type);this._$Em=e,r==null?this.removeAttribute(n):this.setAttribute(n,r),this._$Em=null}}_$AK(e,t){const s=this.constructor,n=s._$Eh.get(e);if(n!==void 0&&this._$Em!==n){const r=s.getPropertyOptions(n),o=typeof r.converter=="function"?{fromAttribute:r.converter}:r.converter?.fromAttribute!==void 0?r.converter:ce;this._$Em=n,this[n]=o.fromAttribute(t,r.type),this._$Em=null}}requestUpdate(e,t,s){if(e!==void 0){if(s??=this.constructor.getPropertyOptions(e),!(s.hasChanged??We)(this[e],t))return;this.P(e,t,s)}this.isUpdatePending===!1&&(this._$ES=this._$ET())}P(e,t,s){this._$AL.has(e)||this._$AL.set(e,t),s.reflect===!0&&this._$Em!==e&&(this._$Ej??=new Set).add(e)}async _$ET(){this.isUpdatePending=!0;try{await this._$ES}catch(t){Promise.reject(t)}const e=this.scheduleUpdate();return e!=null&&await e,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[n,r]of this._$Ep)this[n]=r;this._$Ep=void 0}const s=this.constructor.elementProperties;if(s.size>0)for(const[n,r]of s)r.wrapped!==!0||this._$AL.has(n)||this[n]===void 0||this.P(n,this[n],r)}let e=!1;const t=this._$AL;try{e=this.shouldUpdate(t),e?(this.willUpdate(t),this._$EO?.forEach(s=>s.hostUpdate?.()),this.update(t)):this._$EU()}catch(s){throw e=!1,this._$EU(),s}e&&this._$AE(t)}willUpdate(e){}_$AE(e){this._$EO?.forEach(t=>t.hostUpdated?.()),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(e)),this.updated(e)}_$EU(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(e){return!0}update(e){this._$Ej&&=this._$Ej.forEach(t=>this._$EC(t,this[t])),this._$EU()}updated(e){}firstUpdated(e){}}O.elementStyles=[],O.shadowRootOptions={mode:"open"},O[U("elementProperties")]=new Map,O[U("finalized")]=new Map,ft?.({ReactiveElement:O}),(te.reactiveElementVersions??=[]).push("2.0.4");/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const be=globalThis,Z=be.trustedTypes,ke=Z?Z.createPolicy("lit-html",{createHTML:i=>i}):void 0,Fe="$lit$",S=`lit$${Math.random().toFixed(9).slice(2)}$`,Ve="?"+S,mt=`<${Ve}>`,k=document,j=()=>k.createComment(""),W=i=>i===null||typeof i!="object"&&typeof i!="function",$e=Array.isArray,vt=i=>$e(i)||typeof i?.[Symbol.iterator]=="function",re=`[ 	
\f\r]`,H=/<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,Le=/-->/g,Te=/>/g,M=RegExp(`>|${re}(?:([^\\s"'>=/]+)(${re}*=${re}*(?:[^ 	
\f\r"'\`<>=]|("|')|))|$)`,"g"),Pe=/'/g,Oe=/"/g,Ye=/^(?:script|style|textarea|title)$/i,yt=i=>(e,...t)=>({_$litType$:i,strings:e,values:t}),d=yt(1),N=Symbol.for("lit-noChange"),y=Symbol.for("lit-nothing"),xe=new WeakMap,I=k.createTreeWalker(k,129);function Je(i,e){if(!$e(i)||!i.hasOwnProperty("raw"))throw Error("invalid template strings array");return ke!==void 0?ke.createHTML(e):e}const bt=(i,e)=>{const t=i.length-1,s=[];let n,r=e===2?"<svg>":e===3?"<math>":"",o=H;for(let c=0;c<t;c++){const a=i[c];let l,u,p=-1,m=0;for(;m<a.length&&(o.lastIndex=m,u=o.exec(a),u!==null);)m=o.lastIndex,o===H?u[1]==="!--"?o=Le:u[1]!==void 0?o=Te:u[2]!==void 0?(Ye.test(u[2])&&(n=RegExp("</"+u[2],"g")),o=M):u[3]!==void 0&&(o=M):o===M?u[0]===">"?(o=n??H,p=-1):u[1]===void 0?p=-2:(p=o.lastIndex-u[2].length,l=u[1],o=u[3]===void 0?M:u[3]==='"'?Oe:Pe):o===Oe||o===Pe?o=M:o===Le||o===Te?o=H:(o=M,n=void 0);const b=o===M&&i[c+1].startsWith("/>")?" ":"";r+=o===H?a+mt:p>=0?(s.push(l),a.slice(0,p)+Fe+a.slice(p)+S+b):a+S+(p===-2?c:b)}return[Je(i,r+(i[t]||"<?>")+(e===2?"</svg>":e===3?"</math>":"")),s]};class F{constructor({strings:e,_$litType$:t},s){let n;this.parts=[];let r=0,o=0;const c=e.length-1,a=this.parts,[l,u]=bt(e,t);if(this.el=F.createElement(l,s),I.currentNode=this.el.content,t===2||t===3){const p=this.el.content.firstChild;p.replaceWith(...p.childNodes)}for(;(n=I.nextNode())!==null&&a.length<c;){if(n.nodeType===1){if(n.hasAttributes())for(const p of n.getAttributeNames())if(p.endsWith(Fe)){const m=u[o++],b=n.getAttribute(p).split(S),A=/([.?@])?(.*)/.exec(m);a.push({type:1,index:r,name:A[2],strings:b,ctor:A[1]==="."?wt:A[1]==="?"?Et:A[1]==="@"?At:se}),n.removeAttribute(p)}else p.startsWith(S)&&(a.push({type:6,index:r}),n.removeAttribute(p));if(Ye.test(n.tagName)){const p=n.textContent.split(S),m=p.length-1;if(m>0){n.textContent=Z?Z.emptyScript:"";for(let b=0;b<m;b++)n.append(p[b],j()),I.nextNode(),a.push({type:2,index:++r});n.append(p[m],j())}}}else if(n.nodeType===8)if(n.data===Ve)a.push({type:2,index:r});else{let p=-1;for(;(p=n.data.indexOf(S,p+1))!==-1;)a.push({type:7,index:r}),p+=S.length-1}r++}}static createElement(e,t){const s=k.createElement("template");return s.innerHTML=e,s}}function R(i,e,t=i,s){if(e===N)return e;let n=s!==void 0?t.o?.[s]:t.l;const r=W(e)?void 0:e._$litDirective$;return n?.constructor!==r&&(n?._$AO?.(!1),r===void 0?n=void 0:(n=new r(i),n._$AT(i,t,s)),s!==void 0?(t.o??=[])[s]=n:t.l=n),n!==void 0&&(e=R(i,n._$AS(i,e.values),n,s)),e}class $t{constructor(e,t){this._$AV=[],this._$AN=void 0,this._$AD=e,this._$AM=t}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(e){const{el:{content:t},parts:s}=this._$AD,n=(e?.creationScope??k).importNode(t,!0);I.currentNode=n;let r=I.nextNode(),o=0,c=0,a=s[0];for(;a!==void 0;){if(o===a.index){let l;a.type===2?l=new J(r,r.nextSibling,this,e):a.type===1?l=new a.ctor(r,a.name,a.strings,this,e):a.type===6&&(l=new St(r,this,e)),this._$AV.push(l),a=s[++c]}o!==a?.index&&(r=I.nextNode(),o++)}return I.currentNode=k,n}p(e){let t=0;for(const s of this._$AV)s!==void 0&&(s.strings!==void 0?(s._$AI(e,s,t),t+=s.strings.length-2):s._$AI(e[t])),t++}}class J{get _$AU(){return this._$AM?._$AU??this.v}constructor(e,t,s,n){this.type=2,this._$AH=y,this._$AN=void 0,this._$AA=e,this._$AB=t,this._$AM=s,this.options=n,this.v=n?.isConnected??!0}get parentNode(){let e=this._$AA.parentNode;const t=this._$AM;return t!==void 0&&e?.nodeType===11&&(e=t.parentNode),e}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(e,t=this){e=R(this,e,t),W(e)?e===y||e==null||e===""?(this._$AH!==y&&this._$AR(),this._$AH=y):e!==this._$AH&&e!==N&&this._(e):e._$litType$!==void 0?this.$(e):e.nodeType!==void 0?this.T(e):vt(e)?this.k(e):this._(e)}O(e){return this._$AA.parentNode.insertBefore(e,this._$AB)}T(e){this._$AH!==e&&(this._$AR(),this._$AH=this.O(e))}_(e){this._$AH!==y&&W(this._$AH)?this._$AA.nextSibling.data=e:this.T(k.createTextNode(e)),this._$AH=e}$(e){const{values:t,_$litType$:s}=e,n=typeof s=="number"?this._$AC(e):(s.el===void 0&&(s.el=F.createElement(Je(s.h,s.h[0]),this.options)),s);if(this._$AH?._$AD===n)this._$AH.p(t);else{const r=new $t(n,this),o=r.u(this.options);r.p(t),this.T(o),this._$AH=r}}_$AC(e){let t=xe.get(e.strings);return t===void 0&&xe.set(e.strings,t=new F(e)),t}k(e){$e(this._$AH)||(this._$AH=[],this._$AR());const t=this._$AH;let s,n=0;for(const r of e)n===t.length?t.push(s=new J(this.O(j()),this.O(j()),this,this.options)):s=t[n],s._$AI(r),n++;n<t.length&&(this._$AR(s&&s._$AB.nextSibling,n),t.length=n)}_$AR(e=this._$AA.nextSibling,t){for(this._$AP?.(!1,!0,t);e&&e!==this._$AB;){const s=e.nextSibling;e.remove(),e=s}}setConnected(e){this._$AM===void 0&&(this.v=e,this._$AP?.(e))}}class se{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(e,t,s,n,r){this.type=1,this._$AH=y,this._$AN=void 0,this.element=e,this.name=t,this._$AM=n,this.options=r,s.length>2||s[0]!==""||s[1]!==""?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=y}_$AI(e,t=this,s,n){const r=this.strings;let o=!1;if(r===void 0)e=R(this,e,t,0),o=!W(e)||e!==this._$AH&&e!==N,o&&(this._$AH=e);else{const c=e;let a,l;for(e=r[0],a=0;a<r.length-1;a++)l=R(this,c[s+a],t,a),l===N&&(l=this._$AH[a]),o||=!W(l)||l!==this._$AH[a],l===y?e=y:e!==y&&(e+=(l??"")+r[a+1]),this._$AH[a]=l}o&&!n&&this.j(e)}j(e){e===y?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,e??"")}}class wt extends se{constructor(){super(...arguments),this.type=3}j(e){this.element[this.name]=e===y?void 0:e}}class Et extends se{constructor(){super(...arguments),this.type=4}j(e){this.element.toggleAttribute(this.name,!!e&&e!==y)}}class At extends se{constructor(e,t,s,n,r){super(e,t,s,n,r),this.type=5}_$AI(e,t=this){if((e=R(this,e,t,0)??y)===N)return;const s=this._$AH,n=e===y&&s!==y||e.capture!==s.capture||e.once!==s.once||e.passive!==s.passive,r=e!==y&&(s===y||n);n&&this.element.removeEventListener(this.name,this,s),r&&this.element.addEventListener(this.name,this,e),this._$AH=e}handleEvent(e){typeof this._$AH=="function"?this._$AH.call(this.options?.host??this.element,e):this._$AH.handleEvent(e)}}class St{constructor(e,t,s){this.element=e,this.type=6,this._$AN=void 0,this._$AM=t,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(e){R(this,e)}}const Ct=be.litHtmlPolyfillSupport;Ct?.(F,J),(be.litHtmlVersions??=[]).push("3.2.0");const v=(i,e,t)=>{const s=t?.renderBefore??e;let n=s._$litPart$;if(n===void 0){const r=t?.renderBefore??null;s._$litPart$=n=new J(e.insertBefore(j(),r),r,void 0,t??{})}return n._$AI(i),n};/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */class G extends O{constructor(){super(...arguments),this.renderOptions={host:this},this.o=void 0}createRenderRoot(){const e=super.createRenderRoot();return this.renderOptions.renderBefore??=e.firstChild,e}update(e){const t=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(e),this.o=v(t,this.renderRoot,this.renderOptions)}connectedCallback(){super.connectedCallback(),this.o?.setConnected(!0)}disconnectedCallback(){super.disconnectedCallback(),this.o?.setConnected(!1)}render(){return N}}G._$litElement$=!0,G.finalized=!0,globalThis.litElementHydrateSupport?.({LitElement:G});const _t=globalThis.litElementPolyfillSupport;_t?.({LitElement:G});(globalThis.litElementVersions??=[]).push("4.1.0");class Mt extends HTMLElement{messageProperty=null;static get observedAttributes(){return["visible"]}get type(){return this.getAttribute("type")}get message(){return this.getAttribute("message")}get visible(){return this.getAttribute("visible")}set visible(e){this.setAttribute("visible",e)}connectedCallback(){this.render(),setTimeout(()=>{this.messageProperty=this.message,this.removeAttribute("message"),this.visible="visible"},50),setTimeout(()=>{this.visible="",setTimeout(()=>this.remove(),225)},4e3)}attributeChangedCallback(e,t,s){e==="visible"&&t!==s&&this.render()}render(){v(d` <div class="toast ${this.type} ${this.visible}" role="alert">${this.messageProperty}</div> `,this)}}class It extends HTMLElement{input=null;static get observedAttributes(){return["list"]}get list(){return this.getAttribute("list")}set list(e){this.setAttribute("list",e)}connectedCallback(){this.input=this.closest("div")?.querySelector("input"),this.render()}attributeChangedCallback(e,t,s){e==="list"&&t!==s&&this.render()}resetList(e){const t=this.input;e&&(t.value=e),t.focus(),this.dispatchEvent(new CustomEvent("listReset"))}render(){const e=this.list?.split(",").filter(t=>t);v(e?.length?d`
                      <div class="propose">
                          ${e.map(t=>d`
                                  <a
                                      href="#"
                                      @click="${s=>{s.preventDefault(),this.resetList(t)}}"
                                      @keyup="${s=>{const n=s,r=s.target;n.key==="ArrowDown"&&r.nextElementSibling&&r.nextElementSibling.focus(),n.key==="ArrowUp"&&r.previousElementSibling&&r.nextElementSibling.focus(),n.key==="Enter"&&this.resetList(t)}}"
                                      >${t}</a
                                  >
                              `)}
                      </div>
                  `:d``,this)}}class kt{static currentElement;static newDom(e){return this.setCurrent(e)}static setCurrent(e){return this.currentElement=e,this}static elt(e,t=""){const s=document.createElement(e);return t&&(s.className=t),this.currentElement.appendChild(s),this.currentElement=s,this}static svg(e){const t=document.createElementNS("http://www.w3.org/2000/svg","svg");t.classList.add(e);const s=document.createElementNS("http://www.w3.org/2000/svg","use");return t.appendChild(s),s.setAttribute("href",`#${e}`),this.currentElement.appendChild(t),this.currentElement=t,this}static att(e,t){return t!==null&&this.currentElement.setAttribute(e,t),this}static text(e){return e!==null&&this.currentElement.appendChild(document.createTextNode(e)),this}static listen(e,t){return this.currentElement.addEventListener(e,t,!1),this}static up(){return this.currentElement=this.currentElement.parentNode,this.currentElement||(this.currentElement=document.body),this}static clear(){return this.currentElement.innerHTML="",this}static current(){return this.currentElement}static remove(){this.currentElement.remove()}}const le=(i,e)=>e.some(t=>i instanceof t);let Ne,Re;function Lt(){return Ne||(Ne=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function Tt(){return Re||(Re=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const he=new WeakMap,oe=new WeakMap,ie=new WeakMap;function Pt(i){const e=new Promise((t,s)=>{const n=()=>{i.removeEventListener("success",r),i.removeEventListener("error",o)},r=()=>{t(C(i.result)),n()},o=()=>{s(i.error),n()};i.addEventListener("success",r),i.addEventListener("error",o)});return ie.set(e,i),e}function Ot(i){if(he.has(i))return;const e=new Promise((t,s)=>{const n=()=>{i.removeEventListener("complete",r),i.removeEventListener("error",o),i.removeEventListener("abort",o)},r=()=>{t(),n()},o=()=>{s(i.error||new DOMException("AbortError","AbortError")),n()};i.addEventListener("complete",r),i.addEventListener("error",o),i.addEventListener("abort",o)});he.set(i,e)}let ue={get(i,e,t){if(i instanceof IDBTransaction){if(e==="done")return he.get(i);if(e==="store")return t.objectStoreNames[1]?void 0:t.objectStore(t.objectStoreNames[0])}return C(i[e])},set(i,e,t){return i[e]=t,!0},has(i,e){return i instanceof IDBTransaction&&(e==="done"||e==="store")?!0:e in i}};function Xe(i){ue=i(ue)}function xt(i){return Tt().includes(i)?function(...e){return i.apply(ge(this),e),C(this.request)}:function(...e){return C(i.apply(ge(this),e))}}function Nt(i){return typeof i=="function"?xt(i):(i instanceof IDBTransaction&&Ot(i),le(i,Lt())?new Proxy(i,ue):i)}function C(i){if(i instanceof IDBRequest)return Pt(i);if(oe.has(i))return oe.get(i);const e=Nt(i);return e!==i&&(oe.set(i,e),ie.set(e,i)),e}const ge=i=>ie.get(i);function De(i,e,{blocked:t,upgrade:s,blocking:n,terminated:r}={}){const o=indexedDB.open(i,e),c=C(o);return s&&o.addEventListener("upgradeneeded",a=>{s(C(o.result),a.oldVersion,a.newVersion,C(o.transaction),a)}),t&&o.addEventListener("blocked",a=>t(a.oldVersion,a.newVersion,a)),c.then(a=>{r&&a.addEventListener("close",()=>r()),n&&a.addEventListener("versionchange",l=>n(l.oldVersion,l.newVersion,l))}).catch(()=>{}),c}function Rt(i,{blocked:e}={}){const t=indexedDB.deleteDatabase(i);return e&&t.addEventListener("blocked",s=>e(s.oldVersion,s)),C(t).then(()=>{})}const Dt=["get","getKey","getAll","getAllKeys","count"],Bt=["put","add","delete","clear"],ae=new Map;function Be(i,e){if(!(i instanceof IDBDatabase&&!(e in i)&&typeof e=="string"))return;if(ae.get(e))return ae.get(e);const t=e.replace(/FromIndex$/,""),s=e!==t,n=Bt.includes(t);if(!(t in(s?IDBIndex:IDBObjectStore).prototype)||!(n||Dt.includes(t)))return;const r=async function(o,...c){const a=this.transaction(o,n?"readwrite":"readonly");let l=a.store;return s&&(l=l.index(c.shift())),(await Promise.all([l[t](...c),n&&a.done]))[0]};return ae.set(e,r),r}Xe(i=>({...i,get:(e,t,s)=>Be(e,t)||i.get(e,t,s),has:(e,t)=>!!Be(e,t)||i.has(e,t)}));const qt=["continue","continuePrimaryKey","advance"],qe={},pe=new WeakMap,Ge=new WeakMap,Ht={get(i,e){if(!qt.includes(e))return i[e];let t=qe[e];return t||(t=qe[e]=function(...s){pe.set(this,Ge.get(this)[e](...s))}),t}};async function*zt(...i){let e=this;if(e instanceof IDBCursor||(e=await e.openCursor(...i)),!e)return;e=e;const t=new Proxy(e,Ht);for(Ge.set(t,e),ie.set(t,ge(e));e;)yield t,e=await(pe.get(t)||e.continue()),pe.delete(t)}function He(i,e){return e===Symbol.asyncIterator&&le(i,[IDBIndex,IDBObjectStore,IDBCursor])||e==="iterate"&&le(i,[IDBIndex,IDBObjectStore])}Xe(i=>({...i,get(e,t,s){return He(e,t)?zt:i.get(e,t,s)},has(e,t){return He(e,t)||i.has(e,t)}}));const fe=[];class g{static async set(e,...t){for(let s=0;s<t.length;s++){const n=5242880-JSON.stringify(sessionStorage).length,r=JSON.stringify(t[s+1]);if(r&&r.length>=n||e){const o=t[s],c=await De(t[s],1,{upgrade:u=>u.createObjectStore(t[s])});fe.push(o),await c.transaction(o,"readwrite").objectStore(o).put(t[s+1],o),c.close();return}s%2===0&&sessionStorage.setItem(t[s],r)}}static async get(...e){let t=[];for(const s of e)if(fe.includes(s)){const n=await De(s,1);t.push(await n.transaction(s).objectStore(s).get(s))}else t.push(JSON.parse(sessionStorage.getItem(s)));return t=t.filter(s=>s),t.length===1&&t.length===e.length?t[0]:t.length&&t.length===e.length?t:null}}window.addEventListener("beforeunload",()=>fe.forEach(i=>Rt(i)));class h{static helpers({confirmMessage:e="",cbConfirm:t=null,cbCancel:s=null,isConfirmInit:n=!0,loaderVisible:r=!1}={}){const o=t,c=s;v(d`
                <fs-loader ?visible="${r}"></fs-loader>
                <fs-confirm .message="${e}" ?open="${n?!n:Math.random()}" @modalConfirm="${()=>o()}" @modalCancel="${()=>c()}"></fs-confirm>
            `,document.body)}static loader(e){this.helpers({loaderVisible:e})}static confirm(e,t,s=null){this.helpers({confirmMessage:e,cbConfirm:t,cbCancel:s,isConfirmInit:!1})}static toast(e,t){kt.newDom(document.body).elt("fs-toast").att("type",e).att("message",t)}static async request(e,t="GET",s={},n=""){const r=await fetch(e,{method:t,...s});if(n==="status"&&t==="HEAD")return r.status;if(r.status!==200&&r.status!==204)console.error("Request failed : "+r.status),console.log(r);else switch(n){case"blob":return r.blob();case"text":return r.text();case"response":return r;default:return r.json()}}static async getFragmentHtml(e){const t=await g.get(e)||await h.request(e,"POST");return g.set(!1,e,t),t}static generateId(){return new Date().getTime()}static getMousePosition(){return{x:Ze,y:Ke}}static async getBase64FromFileReader(e){return new Promise((t,s)=>{const n=new FileReader;n.addEventListener("load",()=>t(n.result)),n.addEventListener("error",()=>s),n.readAsDataURL(e)})}static slugify(e){const t="ãàáäâèéëêìíïîòóöôùúüûñçßÿœæŕśńṕẃǵǹḿǘẍźḧ·/-,:;",s="aaaaaeeeeiiiioooouuuuncsyoarsnpwgnmuxzh______",n=new RegExp(t.split("").join("|"),"g");return e.toString().toLowerCase().replace(/\s+/g,"_").replace(n,r=>s.charAt(t.indexOf(r))).replace(/&/g,"_and_").replace(/[^\w\-]+/g,"").replace(/--+/g,"_").replace(/^-+/,"").replace(/-+$/,"")}static urlToBase64(e){return new Promise(async t=>{const s=new FileReader;s.onload=()=>t(s.result),s.readAsDataURL(await this.request(e,"GET",null,"blob"))})}static async uploadFileAndGetUrl(e,t=null){const s=new FormData;return s.append("file",e),t&&s.append("public_id",t),s.append("upload_preset","sheetrpg"),(await h.request("https://api.cloudinary.com/v1_1/elendil/upload","POST",{body:s}))?.secure_url}static isValidHttpUrl(e){return new RegExp("^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$","i").test(e)}}let Ze=0,Ke=0;document.body.addEventListener("pointermove",i=>{Ze=i.pageX+window.scrollX,Ke=i.pageY+window.scrollY});class Ut extends HTMLElement{message="";static get observedAttributes(){return["open"]}get open(){return this.hasAttribute("open")}set open(e){e?this.setAttribute("open",""):this.removeAttribute("open")}connectedCallback(){this.render(),this.style.display="none"}attributeChangedCallback(e,t,s){e==="open"&&t!==s&&(this.style.display="",setTimeout(()=>this.render(),50))}closeDialog(){this.open=!1,setTimeout(()=>{this.style.display="none",this.message="",this.render()},225)}render(){v(d`
                <dialog ?open="${this.open}">
                    <article>
                        ${this.message}
                        <footer>
                            <a
                                href="#"
                                role="button"
                                class="secondary"
                                @click="${e=>{e.preventDefault(),this.dispatchEvent(new CustomEvent("modalCancel")),this.closeDialog()}}"
                                >Cancel</a
                            >
                            <a
                                href="#"
                                role="button"
                                @click="${e=>{e.preventDefault(),this.dispatchEvent(new CustomEvent("modalConfirm")),this.closeDialog()}}"
                                >Confirm</a
                            >
                        </footer>
                    </article>
                </dialog>
            `,this)}}class jt extends HTMLElement{savedRecipes;recipes;static get observedAttributes(){return["choiceMode"]}get choiceMode(){return this.getAttribute("choiceMode")}set choiceMode(e){e?this.setAttribute("choiceMode",e):this.removeAttribute("choiceMode")}async connectedCallback(){this.savedRecipes=await this.getRecipes(),this.search(),this.querySelector("input")?.addEventListener("keyup",e=>this.search(e.target.value))}attributeChangedCallback(e,t,s){e==="choiceMode"&&t!==s&&this.render()}async getRecipes(){const e=await g.get("recipes")||await h.request("/db","POST",{body:'{ "getRecipes": "" }'});return await g.set(!1,"recipes",e),e}removeRecipe(e){h.confirm(d`<h3>Voulez-vous vraiment supprimer ?</h3>`,async()=>{this.savedRecipes=await h.request("/db","POST",{body:`{ "removeRecipe": "${e._id}" }`}),await g.set(!1,"recipes",this.savedRecipes),this.search(),h.toast("success","Recette supprimée")})}search(e=null){this.recipes=(e&&Array.isArray(this.savedRecipes)?this.savedRecipes.filter(t=>t.title.toLowerCase().includes(e.toLowerCase())):!Array.isArray(this.savedRecipes)&&Object.keys(this.savedRecipes).length?[this.savedRecipes]:this.savedRecipes).sort((t,s)=>t.title.localeCompare(s.title)),this.render()}render(){let e=[];v(d`
                ${this.choiceMode?"":d`<h2>Liste des recettes</h2>`}
                <label>
                    <input type="search" name="search" placeholder="Rechercher" />
                </label>
                <aside>
                    <nav>
                        <ul>
                            ${this.recipes.length?this.recipes.map(t=>d`
                                          <li>
                                              ${this.choiceMode?d`
                                                        <label for="${t.slug}">
                                                            <input
                                                                type="${this.choiceMode}"
                                                                id="${t.slug}"
                                                                name="${this.choiceMode==="checkbox"?t.slug:"recipe"}"
                                                                value="${t.title}"
                                                                @change="${s=>{const n=t._id.toString();s.target.checked?e.push(n):e=e.filter(o=>o!==n);let r={choices:e};this.choiceMode==="radio"&&(r={...r,title:t.title}),document.body.dispatchEvent(new CustomEvent("modalConfirm",{detail:r}))}}"
                                                            />
                                                            ${t.title}
                                                        </label>
                                                    `:d`
                                                        <div>
                                                            <span>${t.title}</span>
                                                            <fs-link role="button" class="edit" href="/app/recipe/edit/${t.slug}">
                                                                <svg class="edit">
                                                                    <use href="#edit"></use>
                                                                </svg>
                                                                <span>Éditer</span>
                                                            </fs-link>
                                                            <button type="button" class="remove" @click="${()=>this.removeRecipe(t)}">
                                                                <svg class="remove">
                                                                    <use href="#remove"></use>
                                                                </svg>
                                                                <span>Supprimer</span>
                                                            </button>
                                                        </div>
                                                        <div class="ingredients">${t.ingredients?.map((s,n)=>s.title+(t.ingredients.length-1===n?"":", "))}</div>
                                                    `}
                                          </li>
                                      `):d` <li>Aucun résultat</li>`}
                        </ul>
                    </nav>
                </aside>
            `,this)}}class Wt extends HTMLElement{savedIngredients=[];editMode=null;ingredients=[];categories=[];async connectedCallback(){const e=await g.get("ingredients","categories")||await h.request("/db","POST",{body:'[{ "getIngredients": "" }, { "getCategories": "" }]'});await g.set(!1,"ingredients",e[0],"categories",e[1]),this.savedIngredients=e[0],this.categories=e[1],this.search(),this.querySelector("input")?.addEventListener("keyup",t=>this.search(t.target.value))}async editAndSaveIngredient(e,t){this.savedIngredients=await h.request("/db","POST",{body:`{ "setIngredients": { "ingredients": [ { "title": "${t}", "id": "${e}" } ] } }`}),await g.set(!1,"ingredients",this.savedIngredients),this.resetMode()}resetMode(){this.editMode=null,this.search(this.querySelector("input")?.value)}async removeIngredient(e){h.confirm(d`<h3>Voulez-vous vraiment supprimer ?</h3>`,async()=>{this.savedIngredients=await h.request("/db","POST",{body:`{ "removeIngredient": "${e}" }`}),await g.set(!1,"ingredients",this.savedIngredients),this.search(this.querySelector("input")?.value),h.toast("success","Ingrédient supprimé")})}setCategory(e,t,s){let n;document.body.addEventListener("modalConfirm",r=>{n=r.detail.id}),h.confirm(d` <fs-categories choiceMode="${s}" /> `,async()=>{this.savedIngredients=await h.request("/db","POST",{body:`{ "setIngredients": { "ingredients": [ { "title": "${t}", "id": "${e}", "category": "${n}" } ] } }`}),await g.set(!1,"ingredients",this.savedIngredients),this.search()})}search(e=null){this.ingredients=(e?this.savedIngredients.filter(t=>t.title.toLowerCase().includes(e.toLowerCase())):this.savedIngredients).sort((t,s)=>t.title.localeCompare(s.title)),this.render()}render(){v(d`
                <h2>Liste des ingrédients</h2>
                <label>
                    <input type="search" name="search" placeholder="Rechercher" />
                </label>
                <aside>
                    <nav>
                        <ul>
                            ${this.ingredients.length?this.ingredients.map(e=>{const t=e.title,s=this.categories.map(r=>r._id.toString()===e.category&&r.title).filter(r=>r)[0],n=e._id;return d`
                                          <li>
                                              <div>
                                                  ${this.editMode===n.toString()?d`
                                                            <input
                                                                name="${n}"
                                                                required
                                                                type="text"
                                                                value="${t}"
                                                                @keyup="${r=>{r.key==="Enter"&&this.editAndSaveIngredient(n.toString(),r.target.value),r.key==="Escape"&&this.resetMode()}}"
                                                            />
                                                        `:d` <span>${t}${s?d` (${s})`:""}</span> `}
                                                  ${this.editMode===n.toString()?d`
                                                            <button
                                                                class="valid"
                                                                @click="${r=>this.editAndSaveIngredient(n.toString(),r.target.closest("button")?.previousElementSibling?.value)}"
                                                            >
                                                                <svg class="valid">
                                                                    <use href="#valid"></use>
                                                                </svg>
                                                                <span>Valider</span>
                                                            </button>
                                                        `:d`
                                                            <button
                                                                class="edit"
                                                                @click="${()=>{this.editMode=n.toString(),this.search(this.querySelector("input")?.value)}}"
                                                            >
                                                                <svg class="edit">
                                                                    <use href="#edit"></use>
                                                                </svg>
                                                                <span>Modifier</span>
                                                            </button>
                                                        `}
                                                  ${this.editMode===n.toString()?d`
                                                            <button type="button" class="undo" @click="${()=>this.resetMode()}">
                                                                <svg class="undo">
                                                                    <use href="#undo"></use>
                                                                </svg>
                                                                <span>Annuler</span>
                                                            </button>
                                                        `:d`
                                                            <button type="button" class="remove" @click="${()=>this.removeIngredient(n.toString())}">
                                                                <svg class="remove">
                                                                    <use href="#remove"></use>
                                                                </svg>
                                                                <span>Supprimer</span>
                                                            </button>
                                                            <button type="button" class="setCategory" @click="${()=>this.setCategory(n.toString(),t,e.category)}">
                                                                <svg class="setCategory">
                                                                    <use href="#setCategory"></use>
                                                                </svg>
                                                                <span>Associer une catégorie</span>
                                                            </button>
                                                        `}
                                              </div>
                                          </li>
                                      `}):d` <li>Aucun résultat</li>`}
                        </ul>
                    </nav>
                </aside>
            `,this)}}class f{static strings={ordered:"Acheté",gram:"Gr",centiliter:"Cl",number:"Nb",gramComplete:"Gramme",centiliterComplete:"Centilitre",numberComplete:"Nombre"};static propositions;static savedIngredients;static renderAddIngredientInDialog(e,t=!1){const s=document.querySelector("fs-confirm > dialog > article");v(t?"":d`
                      <div class="addIngredient">
                          <input
                              autocomplete="off"
                              class="ingredient"
                              name="ingredient"
                              required
                              type="text"
                              value="${e?.title}"
                              @input="${n=>document.body.dispatchEvent(new CustomEvent("modalConfirm",{detail:{event:n}}))}"
                              @keyup="${n=>{n.key!=="Enter"&&(f.managePropositions(n),this.renderAddIngredientInDialog(e,t))}}"
                          />
                          <fs-propose
                              list="${f.propositions}"
                              @listReset="${()=>{f.setPropositions(),this.renderAddIngredientInDialog(e,t)}}"
                          ></fs-propose>
                      </div>
                      <input
                          autocomplete="off"
                          class="size"
                          name="size"
                          type="number"
                          value="${e?.size}"
                          @change="${n=>document.body.dispatchEvent(new CustomEvent("modalConfirm",{detail:{event:n}}))}"
                      />
                      <select class="unit" name="'unit'" @input="${n=>document.body.dispatchEvent(new CustomEvent("modalConfirm",{detail:{event:n}}))}">
                          <option class="nb" ?selected="${e?.unit==="nb"}" value="nb">${this.strings.numberComplete}</option>
                          <option class="g" ?selected="${e?.unit==="g"}" value="g">${this.strings.gramComplete}</option>
                          <option class="cl" ?selected="${e?.unit==="cl"}" value="cl">${this.strings.centiliterComplete}</option>
                      </select>
                  `,s,{renderBefore:s?.querySelector("footer")})}static setPropositions(e=null){!this.savedIngredients||!this.savedIngredients.length||(this.propositions=e?this.savedIngredients.map(t=>t.title).filter(t=>t.toLowerCase().includes(e.toLowerCase())):[])}static clearPropositionsOnBackgroundClick(e){document.body.addEventListener("click",t=>{t.target.closest("div.propose")||(this.setPropositions(),e())})}static managePropositions(e){const t=e.target;this.setPropositions(t.value),e.key==="ArrowDown"&&this.propositions?(t.closest("article")?.querySelector("fs-propose a:first-child")).focus():(t.value.length===0||this.propositions.length&&this.propositions.length===1&&this.propositions[0].toLowerCase()===t.value?.toLowerCase())&&(this.propositions[0]?.toLowerCase()===t.value?.toLowerCase()&&(t.value=this.propositions[0]),this.setPropositions())}}f.savedIngredients=[];class Ft extends HTMLElement{title="Ajouter une recette";submitButtonName="Ajouter";isInEditMode=!1;slug="";currentRecipe;currentRecipeTitle="";currentRecipeId;newIngredients=[];async connectedCallback(){f.clearPropositionsOnBackgroundClick(()=>this.render());const e=location.pathname.split("/");this.isInEditMode=e.includes("edit"),this.isInEditMode?(this.slug=e[e.length-1],this.currentRecipe=await g.get(`${this.slug}`)||await h.request("/db","POST",{body:`{ "getRecipes": { "slug": "${this.slug}" } }`}),await g.set(!1,this.slug,this.currentRecipe),Array.isArray(this.currentRecipe)&&(location.href=location.origin+"/404.html"),this.currentRecipeTitle=this.currentRecipe.title,this.currentRecipeId=this.currentRecipe._id.toString(),this.submitButtonName="Modifier",this.title="Modifier une recette",this.newIngredients=this.currentRecipe.ingredients):this.newIngredients=[],f.savedIngredients=await g.get("ingredients")||await h.request("/db","POST",{body:'{ "getIngredients": "" }'}),await g.set(!1,"ingredients",f.savedIngredients),document.body.style.display="flex",this.render(),this.setFormListener()}setFormListener(){const e=this.querySelector("form");e?.addEventListener("keypress",async t=>{t.key==="Enter"&&t.preventDefault()}),e?.addEventListener("submit",async t=>{t.preventDefault();try{const s=Object.fromEntries(new FormData(e).entries()),n=s.id,o=Object.keys(s).reduce((a,l)=>{if(l!=="recipe"&&l!=="id"&&(!a.some(u=>u.title===s[l])&&l.includes("ingredient")&&a.push({title:s[l]}),!l.includes("ingredient"))){const u=l.split("_"),p=Number(u[1])===0?a.length-1:Number(u[1])-1;a[p][u[0]]=s[l]}return a},[]);this.isInEditMode&&(this.currentRecipe.ingredients=o,await g.set(!1,this.slug,this.currentRecipe)),h.loader(!0);const c=await h.request("/db","POST",{body:`{ "setRecipe": { "title": "${s.recipe}", ${n?`"id": "${n}",`:""} "ingredients": ${JSON.stringify(o)}} }`});await g.set(!1,"recipes",c[0],"ingredients",c[1]),h.loader(!1),this.isInEditMode?location.href="/app/recipes":(this.newIngredients=[],document.querySelectorAll("input").forEach(a=>{a.value=""}),h.toast("success","Recette enregistrée"),f.savedIngredients=c[1],this.render())}catch(s){console.error(s)}})}addOrEditIngredient(e,t=void 0){const s=e.target.closest("article"),n=s?.querySelector(".ingredient"),r=s?.querySelector(".size"),o=s?.querySelector(".unit");if(n?.value){const c={title:n.value,size:r.value,unit:o.value};t!=null?this.newIngredients[t]=c:this.newIngredients.push(c),this.render()}}removeIngredient(e){f.setPropositions(),this.newIngredients.splice(e,1),this.render()}openEditListIngredient(e=null,t=null){let s;document.body.addEventListener("modalConfirm",n=>{s=n.detail.event}),h.confirm(d``,async()=>{t!==void 0?this.addOrEditIngredient(s,t):this.addOrEditIngredient(s),f.renderAddIngredientInDialog(e,!0)},()=>f.renderAddIngredientInDialog(e,!0)),f.renderAddIngredientInDialog(e)}render(){v(d`
			<h2>${this.title}</h2>
			<form>
				<label>
					<span>Nom</span>
					<input autocomplete="off" name="recipe" required type="text" value="${this.currentRecipeTitle||""}">
					<input name="id" type="hidden" value="${this.currentRecipeId||""}">
				</label>
				<fieldset class="ingredients">
					<div class="title">
						<legend>Ingrédients</legend>
						<button type="button" class="add" @click="${()=>this.openEditListIngredient()}">
							<svg class="add">
								<use href="#add"></use>
							</svg>
							<span>Ajouter un ingrédient</span>
						</button>
					</div>
					${this.newIngredients?.map((e,t)=>d`
                            <div class="grid">
                                <span>${e?.title||e}${e?.size?` (${e?.size}${e?.unit&&e?.unit!=="nb"?` ${e?.unit}`:""})`:""}</span>
                                <input name="ingredient_${t+1}" type="hidden" value="${e?.title||e}" />
                                <input name="size_${t+1}" type="hidden" value="${e?.size||""}" />
                                <input name="unit_${t+1}" type="hidden" value="${e?.unit||""}" />
                                <button type="button" class="edit" @click="${()=>this.openEditListIngredient(e,t)}">
                                    <svg class="edit">
                                        <use href="#edit"></use>
                                    </svg>
                                    <span>Supprimer un ingrédient</span>
                                </button>
                                <button type="button" class="remove" @click="${()=>this.removeIngredient(t)}">
                                    <svg class="minus">
                                        <use href="#minus"></use>
                                    </svg>
                                    <span>Supprimer un ingrédient</span>
                                </button>
                            </div>
                        `)}
					</div>
				</fieldset>
				<button type="submit">
					<span>${this.submitButtonName}</span>
				</button>
			</form>
		`,this)}}const Qe=new Set,$=new WeakMap,D=new WeakMap,L=new WeakMap,me=new WeakMap,Vt=new WeakMap,B=new WeakMap,K=new WeakMap,z=new WeakSet;let _,we=0,Ee=0;const E="__aa_tgt",V="__aa_del",Q="__aa_new",Yt=i=>{const e=Qt(i);e&&e.forEach(t=>es(t))},Jt=i=>{i.forEach(e=>{e.target===_&&Gt(),$.has(e.target)&&T(e.target)})};function Xt(i){const e=me.get(i);e?.disconnect();let t=$.get(i),s=0;const n=5;t||(t=q(i),$.set(i,t));const{offsetWidth:r,offsetHeight:o}=_,a=[t.top-n,r-(t.left+n+t.width),o-(t.top+n+t.height),t.left-n].map(u=>`${-1*Math.floor(u)}px`).join(" "),l=new IntersectionObserver(()=>{++s>1&&T(i)},{root:_,threshold:1,rootMargin:a});l.observe(i),me.set(i,l)}function T(i){clearTimeout(K.get(i));const e=ne(i),t=Y(e)?500:e.duration;K.set(i,setTimeout(async()=>{const s=L.get(i);try{await s?.finished,$.set(i,q(i)),Xt(i)}catch{}},t))}function Gt(){clearTimeout(K.get(_)),K.set(_,setTimeout(()=>{Qe.forEach(i=>it(i,e=>et(()=>T(e))))},100))}function Zt(i){setTimeout(()=>{Vt.set(i,setInterval(()=>et(T.bind(null,i)),2e3))},Math.round(2e3*Math.random()))}function et(i){typeof requestIdleCallback=="function"?requestIdleCallback(()=>i()):requestAnimationFrame(()=>i())}let ve,x;const Kt=typeof window<"u"&&"ResizeObserver"in window;Kt&&(_=document.documentElement,ve=new MutationObserver(Yt),x=new ResizeObserver(Jt),window.addEventListener("scroll",()=>{Ee=window.scrollY,we=window.scrollX}),x.observe(_));function Qt(i){return i.reduce((s,n)=>[...s,...Array.from(n.addedNodes),...Array.from(n.removedNodes)],[]).every(s=>s.nodeName==="#comment")?!1:i.reduce((s,n)=>{if(s===!1)return!1;if(n.target instanceof Element){if(de(n.target),!s.has(n.target)){s.add(n.target);for(let r=0;r<n.target.children.length;r++){const o=n.target.children.item(r);if(o){if(V in o)return!1;de(n.target,o),s.add(o)}}}if(n.removedNodes.length)for(let r=0;r<n.removedNodes.length;r++){const o=n.removedNodes[r];if(V in o)return!1;o instanceof Element&&(s.add(o),de(n.target,o),D.set(o,[n.previousSibling,n.nextSibling]))}}return s},new Set)}function de(i,e){!e&&!(E in i)?Object.defineProperty(i,E,{value:i}):e&&!(E in e)&&Object.defineProperty(e,E,{value:i})}function es(i){var e;const t=i.isConnected,s=$.has(i);t&&D.has(i)&&D.delete(i),L.has(i)&&((e=L.get(i))===null||e===void 0||e.cancel()),Q in i?ze(i):s&&t?ss(i):s&&!t?is(i):ze(i)}function w(i){return Number(i.replace(/[^0-9.\-]/g,""))}function ts(i){let e=i.parentElement;for(;e;){if(e.scrollLeft||e.scrollTop)return{x:e.scrollLeft,y:e.scrollTop};e=e.parentElement}return{x:0,y:0}}function q(i){const e=i.getBoundingClientRect(),{x:t,y:s}=ts(i);return{top:e.top+s,left:e.left+t,width:e.width,height:e.height}}function tt(i,e,t){let s=e.width,n=e.height,r=t.width,o=t.height;const c=getComputedStyle(i);if(c.getPropertyValue("box-sizing")==="content-box"){const l=w(c.paddingTop)+w(c.paddingBottom)+w(c.borderTopWidth)+w(c.borderBottomWidth),u=w(c.paddingLeft)+w(c.paddingRight)+w(c.borderRightWidth)+w(c.borderLeftWidth);s-=u,r-=u,n-=l,o-=l}return[s,r,n,o].map(Math.round)}function ne(i){return E in i&&B.has(i[E])?B.get(i[E]):{duration:250,easing:"ease-in-out"}}function st(i){if(E in i)return i[E]}function Ae(i){const e=st(i);return e?z.has(e):!1}function it(i,...e){e.forEach(t=>t(i,B.has(i)));for(let t=0;t<i.children.length;t++){const s=i.children.item(t);s&&e.forEach(n=>n(s,B.has(s)))}}function Se(i){return Array.isArray(i)?i:[i]}function Y(i){return typeof i=="function"}function ss(i){const e=$.get(i),t=q(i);if(!Ae(i))return $.set(i,t);let s;if(!e)return;const n=ne(i);if(typeof n!="function"){const r=e.left-t.left,o=e.top-t.top,[c,a,l,u]=tt(i,e,t),p={transform:`translate(${r}px, ${o}px)`},m={transform:"translate(0, 0)"};c!==a&&(p.width=`${c}px`,m.width=`${a}px`),l!==u&&(p.height=`${l}px`,m.height=`${u}px`),s=i.animate([p,m],{duration:n.duration,easing:n.easing})}else{const[r]=Se(n(i,"remain",e,t));s=new Animation(r),s.play()}L.set(i,s),$.set(i,t),s.addEventListener("finish",T.bind(null,i))}function ze(i){Q in i&&delete i[Q];const e=q(i);$.set(i,e);const t=ne(i);if(!Ae(i))return;let s;if(typeof t!="function")s=i.animate([{transform:"scale(.98)",opacity:0},{transform:"scale(0.98)",opacity:0,offset:.5},{transform:"scale(1)",opacity:1}],{duration:t.duration*1.5,easing:"ease-in"});else{const[n]=Se(t(i,"add",e));s=new Animation(n),s.play()}L.set(i,s),s.addEventListener("finish",T.bind(null,i))}function Ue(i,e){var t;i.remove(),$.delete(i),D.delete(i),L.delete(i),(t=me.get(i))===null||t===void 0||t.disconnect(),setTimeout(()=>{if(V in i&&delete i[V],Object.defineProperty(i,Q,{value:!0,configurable:!0}),e&&i instanceof HTMLElement)for(const s in e)i.style[s]=""},0)}function is(i){var e;if(!D.has(i)||!$.has(i))return;const[t,s]=D.get(i);Object.defineProperty(i,V,{value:!0,configurable:!0});const n=window.scrollX,r=window.scrollY;if(s&&s.parentNode&&s.parentNode instanceof Element?s.parentNode.insertBefore(i,s):t&&t.parentNode?t.parentNode.appendChild(i):(e=st(i))===null||e===void 0||e.appendChild(i),!Ae(i))return Ue(i);const[o,c,a,l]=rs(i),u=ne(i),p=$.get(i);(n!==we||r!==Ee)&&ns(i,n,r,u);let m,b={position:"absolute",top:`${o}px`,left:`${c}px`,width:`${a}px`,height:`${l}px`,margin:"0",pointerEvents:"none",transformOrigin:"center",zIndex:"100"};if(!Y(u))Object.assign(i.style,b),m=i.animate([{transform:"scale(1)",opacity:1},{transform:"scale(.98)",opacity:0}],{duration:u.duration,easing:"ease-out"});else{const[A,P]=Se(u(i,"remove",p));P?.styleReset!==!1&&(b=P?.styleReset||b,Object.assign(i.style,b)),m=new Animation(A),m.play()}L.set(i,m),m.addEventListener("finish",Ue.bind(null,i,b))}function ns(i,e,t,s){const n=we-e,r=Ee-t,o=document.documentElement.style.scrollBehavior;if(getComputedStyle(_).scrollBehavior==="smooth"&&(document.documentElement.style.scrollBehavior="auto"),window.scrollTo(window.scrollX+n,window.scrollY+r),!i.parentElement)return;const a=i.parentElement;let l=a.clientHeight,u=a.clientWidth;const p=performance.now();function m(){requestAnimationFrame(()=>{if(!Y(s)){const b=l-a.clientHeight,A=u-a.clientWidth;p+s.duration>performance.now()?(window.scrollTo({left:window.scrollX-A,top:window.scrollY-b}),l=a.clientHeight,u=a.clientWidth,m()):document.documentElement.style.scrollBehavior=o}})}m()}function rs(i){const e=$.get(i),[t,,s]=tt(i,e,q(i));let n=i.parentElement;for(;n&&(getComputedStyle(n).position==="static"||n instanceof HTMLBodyElement);)n=n.parentElement;n||(n=document.body);const r=getComputedStyle(n),o=$.get(n)||q(n),c=Math.round(e.top-o.top)-w(r.borderTopWidth),a=Math.round(e.left-o.left)-w(r.borderLeftWidth);return[c,a,t,s]}function os(i,e={}){return ve&&x&&(window.matchMedia("(prefers-reduced-motion: reduce)").matches&&!Y(e)&&!e.disrespectUserMotionPreference||(z.add(i),getComputedStyle(i).position==="static"&&Object.assign(i.style,{position:"relative"}),it(i,T,Zt,n=>x?.observe(n)),Y(e)?B.set(i,e):B.set(i,{duration:250,easing:"ease-in-out",...e}),ve.observe(i,{childList:!0}),Qe.add(i))),Object.freeze({parent:i,enable:()=>{z.add(i)},disable:()=>{z.delete(i)},isEnabled:()=>z.has(i)})}class ee{static connection;static init(){this.connection=new WebSocket(`${location.protocol==="http:"?"ws:":"wss:"}//${location.host}`)}static listen(e,t=()=>{}){this.connection.readyState===1&&t(),this.connection.onopen=t,this.connection.onerror=s=>{console.error("WebSocket Error "+s),this.connection.close()},this.connection.onclose=s=>{console.log("Socket is closed. Reconnect will be attempted in 1 second.",s.reason),setTimeout(()=>this.init(),1e3)},this.connection.onmessage=e}static send(e){this.connection.send(JSON.stringify(e))}}class as extends HTMLElement{ingredients=[];categories=[];recipeChoices=[];orderedIngredients=[];editMode=null;connectedCallback(){ee.listen(async e=>{this.ingredients=JSON.parse(await e.data.text()),this.displayIngredients()},async()=>{f.clearPropositionsOnBackgroundClick(()=>this.render());const e=await g.get("listIngredients","categories","ingredients")||await h.request("/db","POST",{body:'[{ "getListIngredients": "" }, { "getCategories": "" }, { "getIngredients": "" }]'});await g.set(!1,"listIngredients",e[0],"categories",e[1],"ingredients",e[2]),this.ingredients=e[0],this.categories=e[1],f.savedIngredients=e[2],this.recipeChoices=[],this.sendMessage();const t=await g.get("recipes","dishes")||await h.request("/db","POST",{body:'[{ "getRecipes": "" }, { "getDishes": "" }]'});await g.set(!1,"recipes",t[0],"dishes",t[1])})}sendMessage(){ee.send(this.ingredients),this.displayIngredients()}async displayIngredients(){await g.set(!1,"listIngredients",this.ingredients),this.orderedIngredients=this.ingredients.length?this.ingredients.filter(e=>e.ordered).map(e=>e._id?.toString()):[],this.render();try{os(document.querySelector("ul"))}catch{}}resetMode(){this.editMode=null,this.sendMessage()}async editAndSaveListIngredient(e,t){f.setPropositions();const s=e.target.tagName==="INPUT"&&e.target.name==="ingredient"?e.target:e.target.tagName==="INPUT"&&e.target.name==="size"?e.target.previousElementSibling?.querySelector("input"):e.target.previousElementSibling?.previousElementSibling?.querySelector("input"),n=s?.closest("div")?.nextElementSibling,r=s?.closest("div")?.nextElementSibling?.nextElementSibling;if(s?.value){const o=f.savedIngredients.map(a=>a.title===s.value&&a.category).filter(a=>a)[0],c=await h.request("/db","POST",{body:`[{ "setListIngredients": { "ingredients": [ { "title": "${s.value}"${t?`, "id": "${t}"`:""}${o?`, "category": "${o}"`:""}, "size": "${n.value}", "unit": "${r.value}" } ] } }, { "getIngredients": "" }]`});this.ingredients=c[0],f.savedIngredients=c[1],await g.set(!1,"listIngredients",this.ingredients,"ingredients",f.savedIngredients),s.value="",n.value="",this.resetMode()}}async editListIngredientOrdered(e,t){this.ingredients=await h.request("/db","POST",{body:`{ "setListIngredients": { "ingredients": [ { "id": "${e}", "ordered": ${t} } ] } }`}),await g.set(!1,"listIngredients",this.ingredients),this.resetMode()}async removeListIngredient(e){h.confirm(d`<h3>Voulez-vous vraiment supprimer ?</h3>`,async()=>{this.ingredients=await h.request("/db","POST",{body:`{ "removeListIngredient": "${e}" }`}),await g.set(!1,"listIngredients",this.ingredients),this.sendMessage(),h.toast("success","Ingrédient supprimé")})}addListIngredientByRecipe(){document.body.addEventListener("modalConfirm",e=>{this.recipeChoices=e.detail.choices}),h.confirm(d` <fs-recipes choiceMode="checkbox" /> `,async()=>{if(this.recipeChoices.length){const e=[];f.savedIngredients.forEach(t=>{const s=t.recipes.find(n=>this.recipeChoices.some(r=>n.recipeId===r));s&&e.push({title:t.title,size:s.size,unit:s.unit,category:t.category})}),this.ingredients=await h.request("/db","POST",{body:`{ "setListIngredients": { "ingredients": ${JSON.stringify(e)} } }`}),await g.set(!1,"listIngredients",this.ingredients),this.recipeChoices=[],this.sendMessage()}})}setCategory(e,t){let s;document.body.addEventListener("modalConfirm",n=>{s=n.detail.id}),h.confirm(d` <fs-categories choiceMode /> `,async()=>{const n=await h.request("/db","POST",{body:`[{ "setListIngredients": { "ingredients": [ { "title": "${t}", "id": "${e}", "category": "${s}" } ] } }, { "getIngredients": "" }]`});this.ingredients=n[0],f.savedIngredients=n[1],await g.set(!1,"listIngredients",this.ingredients,"ingredients",f.savedIngredients),this.sendMessage()})}clear(){h.confirm(d`<h3>Voulez vous vider la liste ?</h3>`,async()=>{this.orderedIngredients=[],this.ingredients=await h.request("/db","POST",{body:'{ "clearListIngredients": "" }'}),await g.set(!1,"listIngredients",this.ingredients),this.sendMessage()})}openEditListIngredient(e=null){let t;document.body.addEventListener("modalConfirm",s=>{t=s.detail.event}),h.confirm(d``,async()=>{await this.editAndSaveListIngredient(t,e?._id),f.renderAddIngredientInDialog(e,!0)},()=>f.renderAddIngredientInDialog(e,!0)),f.renderAddIngredientInDialog(e)}render(){const e=n=>{const r=n._id,o=n.title,c=n.size,a=n.unit,l=this.orderedIngredients?.includes(r);return d`
                <li>
                    <div class="editListIngredient ${this.editMode===r?"grid":""}">
                        ${d`
                            <a
                                class="${l?"ordered":""}"
                                @click="${()=>{this.editListIngredientOrdered(r,!l),l?this.orderedIngredients=this.orderedIngredients.filter(u=>r!==u):this.orderedIngredients.push(r),this.orderedIngredients.length===this.ingredients.length&&this.clear()}}"
                                ><span>${o}${c&&d` (${c}${a!=="nb"?` ${a}`:""})`}</span></a
                            >
                            <button class="edit" @click="${()=>this.openEditListIngredient(n)}" .disabled="${l}">
                                <svg class="edit">
                                    <use href="#edit"></use>
                                </svg>
                                <span>Modifier</span>
                            </button>
                            <button type="button" class="remove" @click="${()=>this.removeListIngredient(r)}" .disabled="${l}">
                                <svg class="remove">
                                    <use href="#remove"></use>
                                </svg>
                                <span>Supprimer</span>
                            </button>
                            ${n.category?"":d`
                                      <button type="button" class="setCategory" @click="${()=>this.setCategory(r,o)}" .disabled="${l}">
                                          <svg class="setCategory">
                                              <use href="#setCategory"></use>
                                          </svg>
                                          <span>Associer une catégorie</span>
                                      </button>
                                  `}
                        `}
                    </div>
                </li>
            `},t=n=>this.categories.map(r=>r._id.toString()===n&&r.title).filter(r=>r)[0],s=this.ingredients?.filter(n=>n.category||n.ordered).sort((n,r)=>t(n.category)?.localeCompare(t(r.category))).reduce((n,r)=>{const o=r.category,c=r.ordered?f.strings.ordered:t(o);return n[c]=n[c]??[],n[c].push(r),n},{});v(d`
                <div class="title">
                    <h2>Votre liste</h2>
                    <button type="button" class="add" @click="${()=>this.openEditListIngredient()}">
                        <svg class="add">
                            <use href="#add"></use>
                        </svg>
                        <span>Ajouter un ingrédient</span>
                    </button>
                    <button type="button" class="addList" @click="${()=>this.addListIngredientByRecipe()}">
                        <svg class="addList">
                            <use href="#addList"></use>
                        </svg>
                        <span>Ajouter des ingrédients</span>
                    </button>
                    <button type="button" class="trash" @click="${()=>this.clear()}">
                        <svg class="trash">
                            <use href="#trash"></use>
                        </svg>
                        <span>Vider</span>
                    </button>
                </div>
                <aside>
                    <nav>
                        <ul>
                            ${this.ingredients?.length?d`
                                      ${this.ingredients?.filter(n=>!n.category&&!n.ordered).map(n=>e(n))}
                                      ${Object.entries(s).sort(([n],[r])=>n===f.strings.ordered?1:r===f.strings.ordered?-1:n.localeCompare(r)).map(([n,r])=>d`
                                                  <li>
                                                      <div class="category">${n}</div>
                                                      <ul>
                                                          ${r.sort((o,c)=>o.title.localeCompare(c.title)).map(o=>e(o))}
                                                      </ul>
                                                  </li>
                                              `)}
                                  `:d` <li>Aucun ingrédient ...</li>`}
                        </ul>
                    </nav>
                </aside>
            `,this)}}class ds extends HTMLElement{constructor(){super(),this.render()}get src(){return this.getAttribute("src")}get alt(){return this.getAttribute("alt")}connectedCallback(){const e=this.querySelector("img");e.style.transform=`translate3d(0, ${window.scrollY}px, 0)`,window.addEventListener("scroll",()=>{e.style.transform=`translate3d(0, ${window.scrollY*.5}px, 0)`,window.scrollY>=this.getBoundingClientRect().height?this.firstElementChild?.classList.add("titles"):this.firstElementChild?.classList.remove("titles")})}render(){v(d`
                <div class="image">
                    <img alt="${this.alt}" src="${this.src}" />
                </div>
            `,this)}}class cs extends HTMLElement{connectedCallback(){this.render(),this.setFormListener()}setFormListener(){const e=this.querySelector("form");e?.addEventListener("submit",async t=>{t.preventDefault(),await h.request("/auth","POST",{body:JSON.stringify(Object.fromEntries(new FormData(e).entries()))}),location.href="/"})}render(){v(d`
                <form>
                    <label>
                        <span>Identifiant</span>
                        <input name="id" required type="text" />
                    </label>
                    <label>
                        <span>Mot de passe</span>
                        <input name="password" required type="password" />
                    </label>
                    <button type="submit">
                        <span>Envoyer</span>
                    </button>
                    <a href="/register" role="button">
                        <span>Inscrivez-vous</span>
                    </a>
                </form>
            `,this)}}class ls extends HTMLElement{categories=[];editMode=null;get choiceMode(){const e=this.getAttribute("choiceMode");return e!==null?e:null}set choiceMode(e){e?this.setAttribute("choiceMode",e):this.removeAttribute("choiceMode")}async connectedCallback(){this.categories=await g.get("categories")||await h.request("/db","POST",{body:'{ "getCategories": "" }'}),await g.set(!1,"categories",this.categories),this.render()}resetMode(){this.editMode=null,this.render()}async editAndSaveCategory(e,t=null){const s=e.target.tagName==="INPUT"?e.target:e.target.closest("button")?.previousElementSibling;s?.value&&(this.categories=await h.request("/db","POST",{body:`{ "setCategory": { "title": "${s.value}"${t?`, "id": "${t}"`:""} } }`}),await g.set(!1,"categories",this.categories),s.value="",this.resetMode())}removeCategory(e){h.confirm(d`<h3>Voulez-vous vraiment supprimer ?</h3>`,async()=>{this.categories=await h.request("/db","POST",{body:`{ "removeCategory": "${e}" }`}),await g.set(!1,"categories",this.categories),this.render(),h.toast("success","Catégorie supprimée")})}render(){this.categories.sort((e,t)=>e.title.localeCompare(t.title)),v(d`
                ${this.choiceMode===null?d`<h2>Liste des catégories</h2>`:""}
                <aside>
                    <nav>
                        <ul>
                            <li>
                                ${this.choiceMode===null?d`
                                          <div class="addCategory grid">
                                              <input
                                                  name="newCategory"
                                                  type="text"
                                                  @keyup="${e=>{e.key==="Enter"&&this.editAndSaveCategory(e)}}"
                                              />
                                              <button type="button" class="add" @click="${e=>this.editAndSaveCategory(e)}">
                                                  <svg class="add">
                                                      <use href="#add"></use>
                                                  </svg>
                                                  <span>Ajouter une catégorie</span>
                                              </button>
                                          </div>
                                      `:""}
                            </li>
                            ${this.categories.length?this.categories.map(e=>{const t=e.title,s=e._id;return this.choiceMode!==null?d`
                                                <label for="${s}">
                                                    <input
                                                        type="radio"
                                                        id="${s}"
                                                        name="category"
                                                        value="${t}"
                                                        .checked="${this.choiceMode===s}"
                                                        @change="${()=>document.body.dispatchEvent(new CustomEvent("modalConfirm",{detail:{id:s,title:t}}))}"
                                                    />
                                                    ${t}
                                                </label>
                                            `:d`
                                                <li>
                                                    <div class="editCategory ${this.editMode===s?"grid":""}">
                                                        ${this.editMode===s?d` <input
                                                                  name="editCategory"
                                                                  required
                                                                  type="text"
                                                                  value="${t}"
                                                                  @keyup="${n=>{n.key==="Enter"&&this.editAndSaveCategory(n,s),n.key==="Escape"&&this.resetMode()}}"
                                                              />`:d` <span>${t}</span> `}
                                                        ${this.editMode===s?d`
                                                                  <button class="valid" @click="${n=>this.editAndSaveCategory(n,s)}">
                                                                      <svg class="valid">
                                                                          <use href="#valid"></use>
                                                                      </svg>
                                                                      <span>Valider</span>
                                                                  </button>
                                                              `:d`
                                                                  <button
                                                                      class="edit"
                                                                      @click="${()=>{this.editMode=s,this.render()}}"
                                                                  >
                                                                      <svg class="edit">
                                                                          <use href="#edit"></use>
                                                                      </svg>
                                                                      <span>Modifier</span>
                                                                  </button>
                                                              `}
                                                        ${this.editMode===s?d`
                                                                  <button type="button" class="undo" @click="${()=>this.resetMode()}">
                                                                      <svg class="undo">
                                                                          <use href="#undo"></use>
                                                                      </svg>
                                                                      <span>Annuler</span>
                                                                  </button>
                                                              `:d`
                                                                  <button type="button" class="remove" @click="${()=>this.removeCategory(s)}">
                                                                      <svg class="remove">
                                                                          <use href="#remove"></use>
                                                                      </svg>
                                                                      <span>Supprimer</span>
                                                                  </button>
                                                              `}
                                                    </div>
                                                </li>
                                            `}):d` <li>Aucune catégorie ...</li>`}
                        </ul>
                    </nav>
                </aside>
            `,this)}}class hs extends HTMLElement{animations;get height(){return this.getAttribute("height")}connectedCallback(){this.style.cssText=`height: ${this.height||8e3}px; position: relative;display: block;`,this.animations=Array.from(this.querySelectorAll("*")).reduce((t,s)=>{const n=`${s.tagName}.${s.className}`;return Array.from(s.attributes).forEach(r=>{if(r.name.includes("data")){t[n]||(t[n]=[]);const o=r.name.split("-");t[n].push({element:s,lowValue:Number(o[1]),highValue:Number(o[2]),animations:r.value})}}),t},{});const e=Array.from(this.children);this.render(),this.querySelector("slot")?.replaceWith(...e),document.body.addEventListener("scroll",()=>this.scrollListener()),this.scrollListener()}scrollListener(){const e=document.body.getBoundingClientRect(),t=this.getBoundingClientRect();if(e.height<t.height){const s=e.y-t.y,n=t.height-e.height,r=s/n;this.setAnimations(r)}}setAnimations(e){Object.values(this.animations).forEach(t=>{for(const s of t)(e>=s.lowValue&&e<s.highValue||s.lowValue===0&&e<s.lowValue)&&(s.element.style=s.animations.replaceAll("§§proportion§§",`${e}`))})}render(){v(d`
                <div style="height: ${window.innerHeight}px; position: sticky; top: 0;">
                    <slot></slot>
                </div>
            `,this)}}class us extends HTMLElement{static get observedAttributes(){return["visible"]}get visible(){return this.hasAttribute("visible")}set visible(e){e?this.setAttribute("visible",""):this.removeAttribute("visible")}connectedCallback(){this.render(),this.style.display="none"}attributeChangedCallback(e,t,s){e==="visible"&&t!==s&&(s===""&&(this.style.display="",setTimeout(()=>this.render(),20)),s===null&&(this.style.display="none",setTimeout(()=>this.render(),20)))}render(){v(d`<div class="spinner"></div>`,this)}}class gs extends HTMLElement{constructor(){super(),this.style.visibility="hidden"}get loadingTimer(){return Number(this.getAttribute("loadingTimer"))}connectedCallback(){h.loader(!0),setTimeout(()=>{h.loader(!1),this.style.visibility="visible"},this.loadingTimer)}}class ps extends HTMLElement{week=[];calendar={};dishes=[];dishName="";dishId=null;dishesByCalendar={};async connectedCallback(){this.week=["Lundi","mardi","Mercredi","Jeudi","Vendredi","Samedi","Dimanche"],this.calendar={Midi:this.week,Soir:this.week};const e=await g.get("dishes","ingredients")||await h.request("/db","POST",{body:'[{ "getDishes": "" }, { "getIngredients": "" }]'});await g.set(!1,"dishes",e[0],"ingredients",e[1]),this.dishes=e[0],f.savedIngredients=e[1],this.refresh()}openModal(e,t,s=!1){e.target.closest("details")?.removeAttribute("open"),document.body.addEventListener("modalConfirm",n=>{const r=n.detail;this.dishName=r.dishName||r.title,this.dishId=r.choices&&r.choices[0]||null}),h.confirm(s?d`
                      <label for="firstname">
                          <input
                              type="text"
                              value="${t?.name}"
                              @input="${n=>document.body.dispatchEvent(new CustomEvent("modalConfirm",{detail:{dishName:n.target.value}}))}"
                          />
                      </label>
                  `:d` <fs-recipes choiceMode="radio" /> `,async()=>{if(this.dishName&&(t.name=this.dishName,this.dishes=await h.request("/db","POST",{body:`{ "setDish": ${JSON.stringify(t)} }`}),await g.set(!1,"dishes",this.dishes)),this.refresh(),!s&&this.dishName){const n=f.savedIngredients.filter(o=>o.recipes.length&&o.recipes.some(c=>c.recipeId===this.dishId)).map(o=>{const c=o.recipes.find(a=>a.recipeId===this.dishId);return{title:o.title,category:o.category,unit:c.unit,size:c.size}}),r=await h.request("/db","POST",{body:`{ "setListIngredients": { "ingredients": ${JSON.stringify(n)} } }`});await g.set(!1,"listIngredients",r),ee.send(r)}this.dishName=""})}refresh(){this.dishesByCalendar=this.dishes.reduce((e,t)=>(e[t.time]=e[t.time]??{},e[t.time][t.day]=e[t.time][t.day]??{},e[t.time][t.day]=t,e),{}),this.render()}clear(e=null,t=""){e&&e.target.closest("details")?.removeAttribute("open"),h.confirm(d`<h3>Voulez vous effacer ${t?"ce plat":"les plats de la semaine"} ?</h3>`,async()=>{this.dishes=await h.request("/db","POST",{body:`{ "clearDishes": "${t||""}" }`}),await g.set(!1,"dishes",this.dishes),this.refresh()})}render(){v(d`
                <div class="title">
                    <h2>Les plats de la semaine</h2>
                    <button type="button" class="trash" @click="${()=>this.clear()}">
                        <svg class="trash">
                            <use href="#trash"></use>
                        </svg>
                        <span>Vider</span>
                    </button>
                </div>
                <div class="content">
                    <div class="grid">
                        <div>#</div>
                        ${this.week.map(e=>d` <div>${e}</div> `)}
                    </div>
                    ${Object.entries(this.calendar).map(([e,t])=>d`
                            <div class="grid">
                                <div>${e}</div>
                                ${t.map(s=>{const n=(this.dishesByCalendar[e]&&this.dishesByCalendar[e][s])??{time:e,day:s};return d`
                                        <details role="list">
                                            <summary aria-haspopup="listbox" role="button">${n.name}</summary>
                                            <ul role="listbox">
                                                <li>
                                                    <button @click="${r=>this.openModal(r,n,!0)}">Éditer</button>
                                                </li>
                                                <li>
                                                    <button @click="${r=>this.openModal(r,n)}">Ajouter</button>
                                                </li>
                                                ${n._id&&d`
                                                    <li>
                                                        <button @click="${r=>this.clear(r,n._id.toString())}">Effacer</button>
                                                    </li>
                                                `}
                                            </ul>
                                        </details>
                                    `})}
                            </div>
                        `)}
                </div>
            `,this)}}class fs extends HTMLElement{get href(){return this.getAttribute("href")}set href(e){this.setAttribute("open",e)}async connectedCallback(){const e=Array.from(this.children);this.render(),this.querySelector("slot")?.replaceWith(...e);const t=await h.getFragmentHtml(this.href);this.addEventListener("click",()=>{history.pushState({},"",this.href),nt(t)})}render(){v(d` <slot></slot> `,this)}}const nt=i=>{document.querySelector("[data-replaced-zone]").replaceChildren(document.createRange().createContextualFragment(i.text)),document.body.className=i.class;const e=document.querySelector("[data-replaced-title]");e&&(e.innerHTML=i.title)};window.addEventListener("popstate",async()=>nt(await h.getFragmentHtml(location.pathname)));class ms extends HTMLElement{links=[];isBurger=!1;isHidden=!1;constructor(){super(),this.style.display="none"}async connectedCallback(){}displayMenu(){this.isBurger=window.innerWidth<=1100,this.isHidden=window.innerWidth<=1100,this.isBurger?this.setAttribute("data-burger",""):this.removeAttribute("data-burger"),this.render()}render(){v(d`
                ${this.isBurger?d`
                          <button
                              class="burger"
                              @click="${()=>{this.isHidden=!1,this.render()}}"
                          >
                              <svg class="burger">
                                  <use href="#burger"></use>
                              </svg>
                              <span>Burger Menu</span>
                          </button>
                      `:""}
                <div data-hidden="${this.isHidden}">
                    ${this.isBurger?d`
                              <button
                                  class="back"
                                  @click="${()=>{this.isHidden=!0,this.render()}}"
                              >
                                  <svg class="back">
                                      <use href="#back"></use>
                                      <span>Retour</span>
                                  </svg>
                              </button>
                          `:""}
                    <ul>
                        ${this.links.map(e=>d`
                                <li data-selected="${e.path===location.pathname}" @click="${()=>this.displayMenu()}">
                                    <fs-link href="${e.path}" role="button">
                                        <span>${e.label}</span>
                                    </fs-link>
                                </li>
                            `)}
                    </ul>
                </div>
            `,this)}}class vs extends HTMLElement{connectedCallback(){this.render(),this.setFormListener()}setFormListener(){const e=this.querySelector("form");e?.addEventListener("submit",async t=>{t.preventDefault(),await h.request("/register","POST",{body:JSON.stringify(Object.fromEntries(new FormData(e).entries()))})})}render(){v(d`
                <form>
                    <label>
                        <span>Prénom</span>
                        <input name="firstName" required type="text" />
                    </label>
                    <label>
                        <span>Nom</span>
                        <input name="lastName" required type="text" />
                    </label>
                    <label>
                        <span>Email</span>
                        <input name="mail" required type="email" />
                    </label>
                    <label>
                        <span>Mot de passe</span>
                        <input name="password" required type="password" />
                    </label>
                    <label>
                        <span>Répétez le mot de passe</span>
                        <input name="passwordBis" required type="password" />
                    </label>
                    <button type="submit">
                        <span>S'inscrire</span>
                    </button>
                </form>
            `,this)}}class ys{constructor(){h.helpers(),this.wakeLock(),ee.init(),location.href.charAt(location.href.length-1)==="/"&&history.replaceState({},"",location.href.replace(/\/$/,""))}async wakeLock(){let e=null;const t=async()=>{try{e=await navigator.wakeLock.request()}catch(s){s instanceof Error&&console.error(`${s.name}, ${s.message}`)}};document.addEventListener("visibilitychange",async()=>{e!==null&&document.visibilityState==="visible"&&await t()}),await t()}}new ys;customElements.define("fs-loader",us);customElements.define("fs-header",ds);customElements.define("fs-toast",Mt);customElements.define("fs-confirm",Ut);customElements.define("fs-propose",It);customElements.define("fs-recipes",jt);customElements.define("fs-recipe",Ft);customElements.define("fs-lists",as);customElements.define("fs-ingredients",Wt);customElements.define("fs-categories",ls);customElements.define("fs-login",cs);customElements.define("fs-signup",vs);customElements.define("fs-loading-block",gs);customElements.define("fs-animated-section",hs);customElements.define("fs-dishes",ps);customElements.define("fs-link",fs);customElements.define("fs-menu",ms);
//# sourceMappingURL=app.min.js.map
