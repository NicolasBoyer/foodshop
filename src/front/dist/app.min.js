/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
var e;const t=window,s=t.trustedTypes,i=s?s.createPolicy("lit-html",{createHTML:e=>e}):void 0,n=`lit$${(Math.random()+"").slice(9)}$`,r="?"+n,o=`<${r}>`,a=document,d=(e="")=>a.createComment(e),l=e=>null===e||"object"!=typeof e&&"function"!=typeof e,c=Array.isArray,h=/<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,u=/-->/g,p=/>/g,g=RegExp(">|[ \t\n\f\r](?:([^\\s\"'>=/]+)([ \t\n\f\r]*=[ \t\n\f\r]*(?:[^ \t\n\f\r\"'`<>=]|(\"|')|))|$)","g"),m=/'/g,v=/"/g,f=/^(?:script|style|textarea|title)$/i,b=(e=>(t,...s)=>({_$litType$:e,strings:t,values:s}))(1),y=Symbol.for("lit-noChange"),$=Symbol.for("lit-nothing"),A=new WeakMap,w=(e,t,s)=>{var i,n;const r=null!==(i=null==s?void 0:s.renderBefore)&&void 0!==i?i:t;let o=r._$litPart$;if(void 0===o){const e=null!==(n=null==s?void 0:s.renderBefore)&&void 0!==n?n:null;r._$litPart$=o=new _(t.insertBefore(d(),e),e,void 0,null!=s?s:{})}return o._$AI(e),o},C=a.createTreeWalker(a,129,null,!1),E=(e,t)=>{const s=e.length-1,r=[];let a,d=2===t?"<svg>":"",l=h;for(let t=0;t<s;t++){const s=e[t];let i,c,b=-1,y=0;for(;y<s.length&&(l.lastIndex=y,c=l.exec(s),null!==c);)y=l.lastIndex,l===h?"!--"===c[1]?l=u:void 0!==c[1]?l=p:void 0!==c[2]?(f.test(c[2])&&(a=RegExp("</"+c[2],"g")),l=g):void 0!==c[3]&&(l=g):l===g?">"===c[0]?(l=null!=a?a:h,b=-1):void 0===c[1]?b=-2:(b=l.lastIndex-c[2].length,i=c[1],l=void 0===c[3]?g:'"'===c[3]?v:m):l===v||l===m?l=g:l===u||l===p?l=h:(l=g,a=void 0);const $=l===g&&e[t+1].startsWith("/>")?" ":"";d+=l===h?s+o:b>=0?(r.push(i),s.slice(0,b)+"$lit$"+s.slice(b)+n+$):s+n+(-2===b?(r.push(void 0),t):$)}const c=d+(e[s]||"<?>")+(2===t?"</svg>":"");if(!Array.isArray(e)||!e.hasOwnProperty("raw"))throw Error("invalid template strings array");return[void 0!==i?i.createHTML(c):c,r]};class M{constructor({strings:e,_$litType$:t},i){let o;this.parts=[];let a=0,l=0;const c=e.length-1,h=this.parts,[u,p]=E(e,t);if(this.el=M.createElement(u,i),C.currentNode=this.el.content,2===t){const e=this.el.content,t=e.firstChild;t.remove(),e.append(...t.childNodes)}for(;null!==(o=C.nextNode())&&h.length<c;){if(1===o.nodeType){if(o.hasAttributes()){const e=[];for(const t of o.getAttributeNames())if(t.endsWith("$lit$")||t.startsWith(n)){const s=p[l++];if(e.push(t),void 0!==s){const e=o.getAttribute(s.toLowerCase()+"$lit$").split(n),t=/([.?@])?(.*)/.exec(s);h.push({type:1,index:a,name:t[2],strings:e,ctor:"."===t[1]?L:"?"===t[1]?x:"@"===t[1]?N:I})}else h.push({type:6,index:a})}for(const t of e)o.removeAttribute(t)}if(f.test(o.tagName)){const e=o.textContent.split(n),t=e.length-1;if(t>0){o.textContent=s?s.emptyScript:"";for(let s=0;s<t;s++)o.append(e[s],d()),C.nextNode(),h.push({type:2,index:++a});o.append(e[t],d())}}}else if(8===o.nodeType)if(o.data===r)h.push({type:2,index:a});else{let e=-1;for(;-1!==(e=o.data.indexOf(n,e+1));)h.push({type:7,index:a}),e+=n.length-1}a++}}static createElement(e,t){const s=a.createElement("template");return s.innerHTML=e,s}}function k(e,t,s=e,i){var n,r,o,a;if(t===y)return t;let d=void 0!==i?null===(n=s._$Cl)||void 0===n?void 0:n[i]:s._$Cu;const c=l(t)?void 0:t._$litDirective$;return(null==d?void 0:d.constructor)!==c&&(null===(r=null==d?void 0:d._$AO)||void 0===r||r.call(d,!1),void 0===c?d=void 0:(d=new c(e),d._$AT(e,s,i)),void 0!==i?(null!==(o=(a=s)._$Cl)&&void 0!==o?o:a._$Cl=[])[i]=d:s._$Cu=d),void 0!==d&&(t=k(e,d._$AS(e,t.values),d,i)),t}class S{constructor(e,t){this.v=[],this._$AN=void 0,this._$AD=e,this._$AM=t}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}p(e){var t;const{el:{content:s},parts:i}=this._$AD,n=(null!==(t=null==e?void 0:e.creationScope)&&void 0!==t?t:a).importNode(s,!0);C.currentNode=n;let r=C.nextNode(),o=0,d=0,l=i[0];for(;void 0!==l;){if(o===l.index){let t;2===l.type?t=new _(r,r.nextSibling,this,e):1===l.type?t=new l.ctor(r,l.name,l.strings,this,e):6===l.type&&(t=new O(r,this,e)),this.v.push(t),l=i[++d]}o!==(null==l?void 0:l.index)&&(r=C.nextNode(),o++)}return n}m(e){let t=0;for(const s of this.v)void 0!==s&&(void 0!==s.strings?(s._$AI(e,s,t),t+=s.strings.length-2):s._$AI(e[t])),t++}}class _{constructor(e,t,s,i){var n;this.type=2,this._$AH=$,this._$AN=void 0,this._$AA=e,this._$AB=t,this._$AM=s,this.options=i,this._$C_=null===(n=null==i?void 0:i.isConnected)||void 0===n||n}get _$AU(){var e,t;return null!==(t=null===(e=this._$AM)||void 0===e?void 0:e._$AU)&&void 0!==t?t:this._$C_}get parentNode(){let e=this._$AA.parentNode;const t=this._$AM;return void 0!==t&&11===e.nodeType&&(e=t.parentNode),e}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(e,t=this){e=k(this,e,t),l(e)?e===$||null==e||""===e?(this._$AH!==$&&this._$AR(),this._$AH=$):e!==this._$AH&&e!==y&&this.$(e):void 0!==e._$litType$?this.T(e):void 0!==e.nodeType?this.k(e):(e=>c(e)||"function"==typeof(null==e?void 0:e[Symbol.iterator]))(e)?this.O(e):this.$(e)}S(e,t=this._$AB){return this._$AA.parentNode.insertBefore(e,t)}k(e){this._$AH!==e&&(this._$AR(),this._$AH=this.S(e))}$(e){this._$AH!==$&&l(this._$AH)?this._$AA.nextSibling.data=e:this.k(a.createTextNode(e)),this._$AH=e}T(e){var t;const{values:s,_$litType$:i}=e,n="number"==typeof i?this._$AC(e):(void 0===i.el&&(i.el=M.createElement(i.h,this.options)),i);if((null===(t=this._$AH)||void 0===t?void 0:t._$AD)===n)this._$AH.m(s);else{const e=new S(n,this),t=e.p(this.options);e.m(s),this.k(t),this._$AH=e}}_$AC(e){let t=A.get(e.strings);return void 0===t&&A.set(e.strings,t=new M(e)),t}O(e){c(this._$AH)||(this._$AH=[],this._$AR());const t=this._$AH;let s,i=0;for(const n of e)i===t.length?t.push(s=new _(this.S(d()),this.S(d()),this,this.options)):s=t[i],s._$AI(n),i++;i<t.length&&(this._$AR(s&&s._$AB.nextSibling,i),t.length=i)}_$AR(e=this._$AA.nextSibling,t){var s;for(null===(s=this._$AP)||void 0===s||s.call(this,!1,!0,t);e&&e!==this._$AB;){const t=e.nextSibling;e.remove(),e=t}}setConnected(e){var t;void 0===this._$AM&&(this._$C_=e,null===(t=this._$AP)||void 0===t||t.call(this,e))}}class I{constructor(e,t,s,i,n){this.type=1,this._$AH=$,this._$AN=void 0,this.element=e,this.name=t,this._$AM=i,this.options=n,s.length>2||""!==s[0]||""!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=$}get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}_$AI(e,t=this,s,i){const n=this.strings;let r=!1;if(void 0===n)e=k(this,e,t,0),r=!l(e)||e!==this._$AH&&e!==y,r&&(this._$AH=e);else{const i=e;let o,a;for(e=n[0],o=0;o<n.length-1;o++)a=k(this,i[s+o],t,o),a===y&&(a=this._$AH[o]),r||(r=!l(a)||a!==this._$AH[o]),a===$?e=$:e!==$&&(e+=(null!=a?a:"")+n[o+1]),this._$AH[o]=a}r&&!i&&this.P(e)}P(e){e===$?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,null!=e?e:"")}}class L extends I{constructor(){super(...arguments),this.type=3}P(e){this.element[this.name]=e===$?void 0:e}}const T=s?s.emptyScript:"";class x extends I{constructor(){super(...arguments),this.type=4}P(e){e&&e!==$?this.element.setAttribute(this.name,T):this.element.removeAttribute(this.name)}}class N extends I{constructor(e,t,s,i,n){super(e,t,s,i,n),this.type=5}_$AI(e,t=this){var s;if((e=null!==(s=k(this,e,t,0))&&void 0!==s?s:$)===y)return;const i=this._$AH,n=e===$&&i!==$||e.capture!==i.capture||e.once!==i.once||e.passive!==i.passive,r=e!==$&&(i===$||n);n&&this.element.removeEventListener(this.name,this,i),r&&this.element.addEventListener(this.name,this,e),this._$AH=e}handleEvent(e){var t,s;"function"==typeof this._$AH?this._$AH.call(null!==(s=null===(t=this.options)||void 0===t?void 0:t.host)&&void 0!==s?s:this.element,e):this._$AH.handleEvent(e)}}class O{constructor(e,t,s){this.element=e,this.type=6,this._$AN=void 0,this._$AM=t,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(e){k(this,e)}}const P=t.litHtmlPolyfillSupport;null==P||P(M,_),(null!==(e=t.litHtmlVersions)&&void 0!==e?e:t.litHtmlVersions=[]).push("2.3.1");class H extends HTMLElement{static get observedAttributes(){return["visible"]}get type(){return this.getAttribute("type")}get message(){return this.getAttribute("message")}get visible(){return this.getAttribute("visible")}set visible(e){this.setAttribute("visible",e)}connectedCallback(){this.render(),setTimeout((()=>{this.messageProperty=this.message,this.removeAttribute("message"),this.visible="visible"}),50),setTimeout((()=>{this.visible="",setTimeout((()=>this.remove()),225)}),4e3)}attributeChangedCallback(e,t,s){"visible"===e&&t!==s&&this.render()}render(){w(b`
			<div class='toast ${this.type} ${this.visible}' role='alert'>
				${this.messageProperty}
			</div>
		`,this)}}class q extends HTMLElement{static get observedAttributes(){return["list"]}get list(){return this.getAttribute("list").split(",").filter((e=>e))}set list(e){this.setAttribute("list",e)}connectedCallback(){this.input=this.closest("div").querySelector("input"),this.render()}attributeChangedCallback(e,t,s){"list"===e&&t!==s&&this.render()}resetList(e){e&&(this.input.value=e),this.input.focus(),this.dispatchEvent(new CustomEvent("listReset"))}render(){w(this.list.length?b`
			<div class='propose'>
				${this.list.map((e=>b`
							<a
									href="#"
									@click="${t=>{t.preventDefault(),this.resetList(e)}}"
									@keyup="${t=>{"ArrowDown"===t.key&&t.target.nextElementSibling&&t.target.nextElementSibling.focus(),"ArrowUp"===t.key&&t.target.previousElementSibling&&t.target.previousElementSibling.focus(),"Enter"===t.key&&this.resetList(e)}}"
							>${e}</a>
						`))}
			</div>
		`:b``,this)}}class R{static helpers({confirmMessage:e="",cbConfirm:t=null,isConfirmInit:s=!0,loaderVisible:i=!1}={}){w(b`
			<fs-loader ?visible="${i}"></fs-loader>
			<fs-confirm .message="${e}" ?open="${s?!s:Math.random()}" @modalConfirm="${()=>t()}"></fs-confirm>
		`,document.body)}static loader(e){this.helpers({loaderVisible:e})}static confirm(e,t,s){this.helpers({confirmMessage:e,cbConfirm:t,isConfirmInit:!1})}static toast(e,t){B.newDom(document.body).elt("fs-toast").att("type",e).att("message",t)}static async request(e,t="GET",s,i){const n=await fetch(e,{method:t,...s});if("status"===i&&"HEAD"===t)return n.status;if(200!==n.status&&204!==n.status)console.error("Request failed : "+n.status),console.log(n);else switch(i){case"blob":return n.blob();case"text":return n.text();case"response":return n;default:return n.json()}}static initWsConnection(e,t=(()=>{})){this.wsConnection=new WebSocket(`${"http:"===location.protocol?"ws:":"wss:"}//${location.host}`),this.wsConnection.onopen=t,this.wsConnection.onerror=e=>{console.error("WebSocket Error "+e),this.wsConnection.close()},this.wsConnection.onclose=s=>{console.log("Socket is closed. Reconnect will be attempted in 1 second.",s.reason),setTimeout((()=>this.initWsConnection(e,t)),1e3)},this.wsConnection.onmessage=e}}class B{static newDom(e){return this.setCurrent(e)}static setCurrent(e){return this.currentElement=e,this}static elt(e,t){const s=document.createElement(e);return t&&(s.className=t),this.currentElement.appendChild(s),this.currentElement=s,this}static svg(e){const t=document.createElementNS("http://www.w3.org/2000/svg","svg");t.classList.add(e);const s=document.createElementNS("http://www.w3.org/2000/svg","use");return t.appendChild(s),s.setAttribute("href",`#${e}`),this.currentElement.appendChild(t),this.currentElement=t,this}static att(e,t){return null!==t&&this.currentElement.setAttribute(e,t),this}static text(e){return null!==e&&this.currentElement.appendChild(document.createTextNode(e)),this}static listen(e,t){return this.currentElement.addEventListener(e,t,!1),this}static up(){return this.currentElement=this.currentElement.parentNode,this.currentElement||(this.currentElement=document.body),this}static clear(){return this.currentElement.innerHTML="",this}static current(){return this.currentElement}static remove(){this.currentElement.remove()}}class D extends HTMLElement{static get observedAttributes(){return["open"]}get open(){return this.hasAttribute("open")}set open(e){e?this.setAttribute("open",""):this.removeAttribute("open")}connectedCallback(){this.render(),this.style.display="none"}attributeChangedCallback(e,t,s){"open"===e&&t!==s&&(this.style.display="",setTimeout((()=>this.render()),50))}closeDialog(){this.open=!1,setTimeout((()=>{this.style.display="none",this.message="",this.render()}),225)}render(){w(b`
			<dialog ?open="${this.open}">
				<article>
					${this.message}
					<footer>
						<a role="button" class="secondary" @click="${e=>{e.preventDefault(),this.closeDialog()}}">Cancel</a>
						<a role="button" @click="${e=>{e.preventDefault(),this.dispatchEvent(new CustomEvent("modalConfirm")),this.closeDialog()}}">Confirm</a>
					</footer>
				</article>
			</dialog>
		`,this)}}class W extends HTMLElement{static get observedAttributes(){return["choiceMode"]}get choiceMode(){return this.getAttribute("choiceMode")}set choiceMode(e){e?this.setAttribute("choiceMode",e):this.removeAttribute("choiceMode")}async connectedCallback(){this.savedRecipes=await this.getRecipes(),this.search(),this.querySelector("input").addEventListener("keyup",(e=>this.search(e.target.value)))}attributeChangedCallback(e,t,s){"choiceMode"===e&&t!==s&&this.render()}async getRecipes(){return await R.request("/db","POST",{body:'{ "getRecipes": "" }'})}async removeRecipe(e){R.confirm(b`<h3>Voulez-vous vraiment supprimer ?</h3>`,(async()=>{this.savedRecipes=await R.request("/db","POST",{body:`{ "removeRecipe": "${e._id}" }`}),this.search(),R.toast("success","Recette supprimée")}))}search(e){this.recipes=(e&&Array.isArray(this.savedRecipes)?this.savedRecipes.filter((t=>t.title.toLowerCase().includes(e.toLowerCase()))):!Array.isArray(this.savedRecipes)&&Object.keys(this.savedRecipes).length?[this.savedRecipes]:this.savedRecipes).sort(((e,t)=>e.title.localeCompare(t.title))),this.render()}render(){let e=[];w(b`
			${this.choiceMode?"":b`<h2>Liste des recettes</h2>`}
			<label>
				<input type="search" name="search" placeholder="Rechercher"/>
			</label>
			<aside>
				<nav>
					<ul>
						${this.recipes.length?this.recipes.map((t=>b`
									<li>
										${this.choiceMode?b`
											<label for="${t.slug}">
												<input type="${this.choiceMode}" id="${t.slug}" name="${"checkbox"===this.choiceMode?t.slug:"recipe"}" value="${t.title}" @change="${s=>{const i=t._id;s.target.checked?e.push(i):e=e.filter((e=>e!==i));let n={choices:e};"radio"===this.choiceMode&&(n={...n,title:t.title}),document.body.dispatchEvent(new CustomEvent("modalConfirm",{detail:n}))}}">
												${t.title}
											</label>
										`:b`
											<div>
												<span>${t.title}</span>
												<a role="button" class="edit" href="/recipe/edit/${t.slug}">
													<svg class="edit">
														<use href="#edit"></use>
													</svg>
													<span>Éditer</span>
												</a>
												<button type="button" class="remove" @click="${()=>this.removeRecipe(t)}">
													<svg class="remove">
														<use href="#remove"></use>
													</svg>
													<span>Supprimer</span>
												</button>
											</div>
											<div class="ingredients">
												${t.ingredients&&t.ingredients.map(((e,s)=>e+(t.ingredients.length-1===s?"":", ")))}
											</div>
										`}
									</li>
								`)):b`
							<li>Aucun résultat</li>`}
					</ul>
				</nav>
			</aside>
		`,this)}}class j extends HTMLElement{async connectedCallback(){const e=await R.request("/db","POST",{body:'[{ "getIngredients": "" }, { "getCategories": "" }]'});this.savedIngredients=e[0],this.categories=e[1],this.search(),this.querySelector("input").addEventListener("keyup",(e=>this.search(e.target.value)))}async editAndSaveIngredient(e,t){this.savedIngredients=await R.request("/db","POST",{body:`{ "setIngredients": { "ingredients": [ { "title": "${t}", "id": "${e}" } ] } }`}),this.resetMode()}resetMode(){this.editMode=null,this.search(this.querySelector("input").value)}async removeIngredient(e){R.confirm(b`<h3>Voulez-vous vraiment supprimer ?</h3>`,(async()=>{this.savedIngredients=await R.request("/db","POST",{body:`{ "removeIngredient": "${e}" }`}),this.search(),R.toast("success","Ingrédient supprimé")}))}setCategory(e,t,s,i){let n;document.body.addEventListener("modalConfirm",(e=>{n=e.detail.id})),R.confirm(b`
			<fs-categories choiceMode="${i}"/>
		`,(async()=>{this.savedIngredients=await R.request("/db","POST",{body:`{ "setIngredients": { "ingredients": [ { "title": "${s}", "id": "${t}", "category": "${n}" } ] } }`}),this.search()}))}search(e){this.ingredients=(e?this.savedIngredients.filter((t=>t.title.toLowerCase().includes(e.toLowerCase()))):this.savedIngredients).sort(((e,t)=>e.title.localeCompare(t.title))),this.render()}render(){w(b`
			<h2>Liste des ingrédients</h2>
			<label>
				<input type="search" name="search" placeholder="Rechercher"/>
			</label>
			<aside>
				<nav>
					<ul>
						${this.ingredients.length?this.ingredients.map((e=>{const t=e.title,s=this.categories.map((t=>t._id===e.category&&t.title)).filter((e=>e))[0],i=e._id;return b`
										<li>
											<div>
												${this.editMode===i?b`
													<input name="${i}" required type="text" value="${t}" @keyup="${e=>{"Enter"===e.key&&this.editAndSaveIngredient(i,e.target.value),"Escape"===e.key&&this.resetMode()}}"/>
												`:b`
													<span>${t}${s?b` (${s})`:""}</span>
												`}
												${this.editMode===i?b`
													<button class="valid" @click="${e=>this.editAndSaveIngredient(i,e.target.closest("button").previousElementSibling.value)}">
														<svg class="valid">
															<use href="#valid"></use>
														</svg>
														<span>Valider</span>
													</button>
												`:b`
													<button class="edit" @click="${()=>{this.editMode=i,this.search(this.querySelector("input").value)}}">
														<svg class="edit">
															<use href="#edit"></use>
														</svg>
														<span>Modifier</span>
													</button>
												`}
												${this.editMode===i?b`
													<button type="button" class="undo" @click="${()=>this.resetMode()}">
														<svg class="undo">
															<use href="#undo"></use>
														</svg>
														<span>Annuler</span>
													</button>
												`:b`
													<button type="button" class="remove" @click="${()=>this.removeIngredient(i)}">
														<svg class="remove">
															<use href="#remove"></use>
														</svg>
														<span>Supprimer</span>
													</button>
													<button type="button" class="setCategory" @click="${s=>this.setCategory(s,i,t,e.category)}">
														<svg class="setCategory">
															<use href="#setCategory"></use>
														</svg>
														<span>Associer une catégorie</span>
													</button>
												`}
											</div>
										</li>
									`})):b`
							<li>Aucun résultat</li>`}
					</ul>
				</nav>
			</aside>
		`,this)}}class V{static setPropositions(e){this.savedIngredients&&this.savedIngredients.length&&(this.propositions=e?this.savedIngredients.length&&this.savedIngredients.map((e=>e.title)).filter((t=>t.toLowerCase().includes(e.toLowerCase()))):[])}static clearPropositionsOnBackgroundClick(e){document.body.addEventListener("click",(t=>{t.target.closest("div.propose")||(this.setPropositions(),e())}))}static async managePropositions(e,t){const s=e.target;this.setPropositions(s.value),"Enter"===e.key?t(e):"ArrowDown"===e.key&&this.propositions?s.closest(".grid").querySelector("fs-propose a:first-child").focus():this.propositions.length&&(0===s.value.length||1===this.propositions.length&&this.propositions[0].toLowerCase()===s.value)&&(this.propositions[0].toLowerCase()===s.value&&(s.value=this.propositions[0]),this.setPropositions())}}V.savedIngredients=[];class z extends HTMLElement{async connectedCallback(){V.clearPropositionsOnBackgroundClick((()=>this.render()));const e=location.pathname.split("/");if(this.submitButtonName="Ajouter",this.title="Ajouter une recette",this.isInEditMode=e.includes("edit"),this.isInEditMode){const t=await R.request("/db","POST",{body:`{ "getRecipes": { "slug": "${e[e.length-1]}" } }`});Array.isArray(t)&&(location.href=location.origin+"/404.html"),this.currentRecipeTitle=t.title,this.currentRecipeId=t._id,this.submitButtonName="Modifier",this.title="Modifier une recette",this.newIngredients=t.ingredients}else this.newIngredients=[];V.savedIngredients=await R.request("/db","POST",{body:'{ "getIngredients": "" }'}),document.body.style.display="flex",this.render(),this.setFormListener()}setFormListener(){const e=this.querySelector("form");e.addEventListener("keypress",(async e=>{"Enter"===e.key&&e.preventDefault()})),e.addEventListener("submit",(async t=>{t.preventDefault();try{const t=location.pathname.split("/").includes("edit"),s=Object.fromEntries(new FormData(e).entries()),i=s.id,n=await R.request("/db","POST",{body:`{ "setRecipe": { "title": "${s.recipe}", ${i?`"id": "${i}",`:""} "ingredients": ${JSON.stringify(Object.keys(s).map((e=>"recipe"!==e&&"id"!==e&&{title:s[e]})).filter((e=>e)))}} }`});t?location.href="/recipes":(this.newIngredients=[],document.querySelectorAll("input").forEach((e=>{e.value=""})),R.toast("success","Recette enregistrée"),V.savedIngredients=n[1],this.render())}catch(e){console.error(e)}}))}addIngredient(e){V.setPropositions();const t=e.target.closest("button"),s=t&&t.previousElementSibling,i="INPUT"===e.target.tagName?e.target:s&&s.querySelector("input");i&&i.value&&(this.newIngredients.push(i.value),i.value="",this.render())}removeIngredient(e){V.setPropositions(),this.newIngredients.splice(e,1),this.render()}render(){w(b`
			<h2>${this.title}</h2>
			<form>
				<label>
					<span>Nom</span>
					<input name="recipe" required type="text" value="${this.currentRecipeTitle||""}">
					<input name="id" type="hidden" value="${this.currentRecipeId||""}">
				</label>
				<fieldset class="ingredients">
					<legend>Ingrédients</legend>
					${this.newIngredients.map(((e,t)=>b`
								<div class="grid ${this.isInEditMode&&this.newIngredients.length-1===t?"threeCol":""}">
									<label>
										<input name="ingredient_${t+1}" required type="text" value="${e}"/>
									</label>
									<button type="button" class="remove" @click="${()=>this.removeIngredient(t)}">
										<svg class="minus">
											<use href="#minus"></use>
										</svg>
										<span>Supprimer un ingrédient</span>
									</button>
									${this.isInEditMode&&this.newIngredients.length-1===t?b`
										<button type="button" class="add" @click="${e=>{this.isInEditMode=!1,this.addIngredient(e)}}">
											<svg class="add">
												<use href="#add"></use>
											</svg>
											<span>Ajouter un ingrédient</span>
										</button>
									`:""}
								</div>
							`))}
					${this.isInEditMode?"":b`
						<div class="grid">
							<label>
								<input
										name="ingredient_0"
										required
										type="text"
										@keyup="${e=>{V.managePropositions(e,(e=>this.addIngredient(e))),this.render()}}"
								/>
							</label>
							<button type="button" class="add" @click="${e=>this.addIngredient(e)}">
								<svg class="add">
									<use href="#add"></use>
								</svg>
								<span>Ajouter un ingrédient</span>
							</button>
							<fs-propose list="${V.propositions}" @listReset="${()=>{V.setPropositions(),this.render()}}"></fs-propose>
					`}
					</div>
				</fieldset>
				<button type="submit">
					<span>${this.submitButtonName}</span>
				</button>
			</form>
		`,this)}}const U=new Set,J=new WeakMap,F=new WeakMap,Y=new WeakMap,G=new WeakMap,Z=new WeakMap,X=new WeakMap,K=new WeakMap,Q=new WeakSet;let ee;const te="__aa_tgt",se="__aa_del";function ie(e){clearTimeout(K.get(e));const t=ue(e),s="function"==typeof t?500:t.duration;K.set(e,setTimeout((async()=>{const t=Y.get(e);t&&!await t.finished||(J.set(e,ce(e)),function(e){const t=G.get(e);null==t||t.disconnect();let s=J.get(e),i=0;s||(s=ce(e),J.set(e,s));const{offsetWidth:n,offsetHeight:r}=ee,o=[s.top-5,n-(s.left+5+s.width),r-(s.top+5+s.height),s.left-5].map((e=>-1*Math.floor(e)+"px")).join(" "),a=new IntersectionObserver((()=>{++i>1&&ie(e)}),{root:ee,threshold:1,rootMargin:o});a.observe(e),G.set(e,a)}(e))}),s))}function ne(e){setTimeout((()=>{Z.set(e,setInterval((()=>re(ie.bind(null,e))),2e3))}),Math.round(2e3*Math.random()))}function re(e){"function"==typeof requestIdleCallback?requestIdleCallback((()=>e())):requestAnimationFrame((()=>e()))}let oe,ae;function de(e,t){t||te in e?t&&!(te in t)&&Object.defineProperty(t,te,{value:e}):Object.defineProperty(e,te,{value:e})}function le(e){return Number(e.replace(/[^0-9.\-]/g,""))}function ce(e){const t=e.getBoundingClientRect();return{top:t.top+window.scrollY,left:t.left+window.scrollX,width:t.width,height:t.height}}function he(e,t,s){let i=t.width,n=t.height,r=s.width,o=s.height;const a=getComputedStyle(e);if("content-box"===a.getPropertyValue("box-sizing")){const e=le(a.paddingTop)+le(a.paddingBottom)+le(a.borderTopWidth)+le(a.borderBottomWidth),t=le(a.paddingLeft)+le(a.paddingRight)+le(a.borderRightWidth)+le(a.borderLeftWidth);i-=t,r-=t,n-=e,o-=e}return[i,r,n,o].map(Math.round)}function ue(e){return te in e&&X.has(e[te])?X.get(e[te]):{duration:250,easing:"ease-in-out"}}function pe(e){if(te in e)return e[te]}function ge(e){const t=pe(e);return!!t&&Q.has(t)}function me(e,...t){t.forEach((t=>t(e,X.has(e))));for(let s=0;s<e.children.length;s++){const i=e.children.item(s);i&&t.forEach((e=>e(i,X.has(i))))}}"undefined"!=typeof window&&(ee=document.documentElement,oe=new MutationObserver((e=>{const t=function(e){return e.reduce(((e,t)=>{if(!1===e)return!1;if(t.target instanceof Element){if(de(t.target),!e.has(t.target)){e.add(t.target);for(let s=0;s<t.target.children.length;s++){const i=t.target.children.item(s);if(i){if(se in i)return!1;de(t.target,i),e.add(i)}}}if(t.removedNodes.length)for(let s=0;s<t.removedNodes.length;s++){const i=t.removedNodes[s];if(se in i)return!1;i instanceof Element&&(e.add(i),de(t.target,i),F.set(i,[t.previousSibling,t.nextSibling]))}}return e}),new Set)}(e);t&&t.forEach((e=>function(e){var t;const s=ee.contains(e),i=J.has(e);s&&F.has(e)&&F.delete(e),Y.has(e)&&(null===(t=Y.get(e))||void 0===t||t.cancel()),i&&s?function(e){const t=J.get(e),s=ce(e);if(!ge(e))return J.set(e,s);let i;if(!t)return;const n=ue(e);if("function"!=typeof n){const r=t.left-s.left,o=t.top-s.top,[a,d,l,c]=he(e,t,s),h={transform:`translate(${r}px, ${o}px)`},u={transform:"translate(0, 0)"};a!==d&&(h.width=`${a}px`,u.width=`${d}px`),l!==c&&(h.height=`${l}px`,u.height=`${c}px`),i=e.animate([h,u],{duration:n.duration,easing:n.easing})}else i=new Animation(n(e,"remain",t,s)),i.play();Y.set(e,i),J.set(e,s),i.addEventListener("finish",ie.bind(null,e))}(e):i&&!s?function(e){var t;if(!F.has(e)||!J.has(e))return;const[s,i]=F.get(e);function n(){var t;e.remove(),J.delete(e),F.delete(e),Y.delete(e),null===(t=G.get(e))||void 0===t||t.disconnect()}if(Object.defineProperty(e,se,{value:!0}),i&&i.parentNode&&i.parentNode instanceof Element?i.parentNode.insertBefore(e,i):s&&s.parentNode?s.parentNode.appendChild(e):null===(t=pe(e))||void 0===t||t.appendChild(e),!ge(e))return n();const[r,o,a,d]=function(e){const t=J.get(e),[s,,i]=he(e,t,ce(e));let n=e.parentElement;for(;n&&("static"===getComputedStyle(n).position||n instanceof HTMLBodyElement);)n=n.parentElement;n||(n=document.body);const r=getComputedStyle(n),o=J.get(n)||ce(n);return[Math.round(t.top-o.top)-le(r.borderTopWidth),Math.round(t.left-o.left)-le(r.borderLeftWidth),s,i]}(e),l=ue(e),c=J.get(e);let h;Object.assign(e.style,{position:"absolute",top:`${r}px`,left:`${o}px`,width:`${a}px`,height:`${d}px`,margin:0,pointerEvents:"none",transformOrigin:"center",zIndex:100}),"function"!=typeof l?h=e.animate([{transform:"scale(1)",opacity:1},{transform:"scale(.98)",opacity:0}],{duration:l.duration,easing:"ease-out"}):(h=new Animation(l(e,"remove",c)),h.play()),Y.set(e,h),h.addEventListener("finish",n)}(e):function(e){const t=ce(e);J.set(e,t);const s=ue(e);if(!ge(e))return;let i;"function"!=typeof s?i=e.animate([{transform:"scale(.98)",opacity:0},{transform:"scale(0.98)",opacity:0,offset:.5},{transform:"scale(1)",opacity:1}],{duration:1.5*s.duration,easing:"ease-in"}):(i=new Animation(s(e,"add",t)),i.play()),Y.set(e,i),i.addEventListener("finish",ie.bind(null,e))}(e)}(e)))})),ae=new ResizeObserver((e=>{e.forEach((e=>{e.target===ee&&(clearTimeout(K.get(ee)),K.set(ee,setTimeout((()=>{U.forEach((e=>me(e,(e=>re((()=>ie(e)))))))}),100))),J.has(e.target)&&ie(e.target)}))})),ae.observe(ee));class ve extends HTMLElement{async connectedCallback(){this.strings={ordered:"Acheté"},await R.initWsConnection((async e=>{this.ingredients=JSON.parse(await e.data.text()),this.orderedIngredients=this.ingredients.length?this.ingredients.filter((e=>e.ordered)).map((e=>e._id)):[],this.render(),function(e,t={}){oe&&ae&&(window.matchMedia("(prefers-reduced-motion: reduce)").matches&&"function"!=typeof t&&!t.disrespectUserMotionPreference||(Q.add(e),"static"===getComputedStyle(e).position&&Object.assign(e.style,{position:"relative"}),me(e,ie,ne,(e=>null==ae?void 0:ae.observe(e))),"function"==typeof t?X.set(e,t):X.set(e,{duration:250,easing:"ease-in-out",...t}),oe.observe(e,{childList:!0}),U.add(e))),Object.freeze({parent:e,enable:()=>{Q.add(e)},disable:()=>{Q.delete(e)},isEnabled:()=>Q.has(e)})}(document.querySelector("ul"))}),(async()=>{V.clearPropositionsOnBackgroundClick((()=>this.render()));const e=await R.request("/db","POST",{body:'[{ "getListIngredients": "" }, { "getCategories": "" }, { "getIngredients": "" }]'});this.ingredients=e[0],this.categories=e[1],V.savedIngredients=e[2],this.recipeChoices=[],R.wsConnection.send(JSON.stringify(this.ingredients))}))}resetMode(){this.editMode=null,R.wsConnection.send(JSON.stringify(this.ingredients))}async editAndSaveListIngredient(e,t){V.setPropositions();const s="INPUT"===e.target.tagName&&"ingredient"===e.target.name?e.target:"INPUT"===e.target.tagName&&"size"===e.target.name?e.target.previousElementSibling:e.target.closest("button").previousElementSibling.previousElementSibling,i=s.nextElementSibling;if(s&&s.value){const e=V.savedIngredients.map((e=>e.title===s.value&&e.category)).filter((e=>e))[0];this.ingredients=await R.request("/db","POST",{body:`{ "setListIngredients": { "ingredients": [ { "title": "${s.value}"${t?`, "id": "${t}"`:""}${e?`, "category": "${e}"`:""}, "size": "${i.value}" } ] } }`}),t||!V.savedIngredients||V.savedIngredients.some((e=>e.title===s.value))||V.savedIngredients.push({title:s.value}),s.value="",i.value="",this.resetMode()}}async editListIngredientOrdered(e,t){this.ingredients=await R.request("/db","POST",{body:`{ "setListIngredients": { "ingredients": [ { "id": "${e}", "ordered": ${t} } ] } }`}),this.resetMode()}async removeListIngredient(e){R.confirm(b`<h3>Voulez-vous vraiment supprimer ?</h3>`,(async()=>{this.ingredients=await R.request("/db","POST",{body:`{ "removeListIngredient": "${e}" }`}),R.wsConnection.send(JSON.stringify(this.ingredients)),R.toast("success","Ingrédient supprimé")}))}addListIngredientByRecipe(){document.body.addEventListener("modalConfirm",(e=>{this.recipeChoices=e.detail.choices})),R.confirm(b`
			<fs-recipes choiceMode="checkbox"/>
		`,(async()=>{if(this.recipeChoices.length){const e=V.savedIngredients.filter((e=>e.recipes&&e.recipes.length&&e.recipes.some((e=>this.recipeChoices.includes(e))))).map((e=>({title:e.title,category:e.category})));this.ingredients=await R.request("/db","POST",{body:`{ "setListIngredients": { "ingredients": ${JSON.stringify(e)} } }`}),this.recipeChoices=[],R.wsConnection.send(JSON.stringify(this.ingredients))}}))}setCategory(e,t,s){let i;document.body.addEventListener("modalConfirm",(e=>{i=e.detail.id})),R.confirm(b`
			<fs-categories choiceMode/>
		`,(async()=>{const e=await R.request("/db","POST",{body:`[{ "setListIngredients": { "ingredients": [ { "title": "${s}", "id": "${t}", "category": "${i}" } ] } }, { "getIngredients": "" }]`});this.ingredients=e[0],V.savedIngredients=e[1],R.wsConnection.send(JSON.stringify(this.ingredients))}))}clear(){R.confirm(b`<h3>Voulez vous vider la liste ?</h3>`,(async()=>{this.orderedIngredients=[],this.ingredients=await R.request("/db","POST",{body:'{ "clearListIngredients": "" }'}),R.wsConnection.send(JSON.stringify(this.ingredients))}))}render(){const e=e=>{const t=e._id,s=e.title,i=e.size,n=this.orderedIngredients&&this.orderedIngredients.includes(t);return b`
				<li>
					<div class="editListIngredient ${this.editMode===t?"grid":""}">
						${this.editMode===t?b`
							<input name="ingredient" required type="text" value="${s}" @keyup="${e=>{"Enter"===e.key&&this.editAndSaveListIngredient(e,t),"Escape"===e.key&&this.resetMode()}}"/>
							<input name="size" type="text" value="${i}" @keyup="${e=>{"Enter"===e.key&&this.editAndSaveListIngredient(e,t),"Escape"===e.key&&this.resetMode()}}"/>
						`:b`
							<a class="${n?"ordered":""}" @click="${()=>{this.editListIngredientOrdered(t,!n),n?this.orderedIngredients=this.orderedIngredients.filter((e=>t!==e)):this.orderedIngredients.push(t),this.orderedIngredients.length===this.ingredients.length&&this.clear()}}"><span>${s}${i&&b` (${i})`}</span></a>
						`}
						${this.editMode===t?b`
							<button class="valid" @click="${e=>this.editAndSaveListIngredient(e,t)}">
								<svg class="valid">
									<use href="#valid"></use>
								</svg>
								<span>Valider</span>
							</button>
						`:b`
							<button class="edit" @click="${()=>{this.editMode=t,this.render()}}" .disabled="${n}">
								<svg class="edit">
									<use href="#edit"></use>
								</svg>
								<span>Modifier</span>
							</button>
						`}
						${this.editMode===t?b`
							<button type="button" class="undo" @click="${()=>this.resetMode()}">
								<svg class="undo">
									<use href="#undo"></use>
								</svg>
								<span>Annuler</span>
							</button>
						`:b`
							<button type="button" class="remove" @click="${()=>this.removeListIngredient(t)}" .disabled="${n}">
								<svg class="remove">
									<use href="#remove"></use>
								</svg>
								<span>Supprimer</span>
							</button>
							${e.category?"":b`
								<button type="button" class="setCategory" @click="${e=>this.setCategory(e,t,s)}" .disabled="${n}">
									<svg class="setCategory">
										<use href="#setCategory"></use>
									</svg>
									<span>Associer une catégorie</span>
								</button>
							`}
						`}
					</div>
				</li>
			`},t=e=>this.categories.map((t=>t._id===e&&t.title)).filter((e=>e))[0],s=this.ingredients.filter((e=>e.category)).sort(((e,s)=>t(e.category).localeCompare(t(s.category)))).reduce(((e,s)=>{const i=s.category,n=s.ordered?this.strings.ordered:t(i);return e[n]=e[n]??[],e[n].push(s),e}),{});w(b`
			<div class="title">
				<h2>Votre liste</h2>
				<button type="button" class="trash" @click="${()=>this.clear()}">
					<svg class="trash">
						<use href="#trash"></use>
					</svg>
					<span>Vider</span>
				</button>
			</div>
			<aside>
				<nav>
					<ul>
						<li>
							<div class="addListIngredient grid">
								<input name="ingredient" type="text" @keyup="${e=>{V.managePropositions(e,(()=>this.editAndSaveListIngredient(e))),this.render()}}"/>
								<input name="size" type="text" @keyup="${e=>{"Enter"===e.key&&this.editAndSaveListIngredient(e)}}"/>
								<button type="button" class="add" @click="${e=>this.editAndSaveListIngredient(e)}">
									<svg class="add">
										<use href="#add"></use>
									</svg>
									<span>Ajouter un ingrédient</span>
								</button>
								<button type="button" class="addList" @click="${()=>this.addListIngredientByRecipe()}">
									<svg class="addList">
										<use href="#addList"></use>
									</svg>
									<span>Ajouter des ingrédients</span>
								</button>
								<fs-propose list="${V.propositions}" @listReset="${()=>{V.setPropositions(),this.render()}}"></fs-propose>
							</div>
						</li>
						${this.ingredients.length?b`
									${this.ingredients.filter((e=>!e.category)).map((t=>e(t)))}
									${Object.entries(s).sort((([e,t],[s,i])=>e===this.strings.ordered?1:s===this.strings.ordered?-1:e.localeCompare(s))).map((([t,s])=>b`
											<li>
												<div class="category">${t}</div>
												<ul>
													${s.sort(((e,t)=>e.title.localeCompare(t.title))).map((t=>e(t)))}
												</ul>
											</li>
										`))}
								`:b`
									<li>Aucun ingrédient ...</li>`}
					</ul>
				</nav>
			</aside>
		`,this)}}class fe extends HTMLElement{get src(){return this.getAttribute("src")}get alt(){return this.getAttribute("alt")}constructor(){super(),this.render()}connectedCallback(){const e=this.querySelector("img");e.style.transform=`translate3d(0, ${window.scrollY}px, 0)`,window.addEventListener("scroll",(()=>{e.style.transform=`translate3d(0, ${.5*window.scrollY}px, 0)`,window.scrollY>=this.getBoundingClientRect().height?this.firstElementChild.classList.add("titles"):this.firstElementChild.classList.remove("titles")}))}render(){w(b`
			<div class="image">
				<img alt="${this.alt}" src="${this.src}"/>
			</div>
		`,this)}}class be extends HTMLElement{connectedCallback(){this.render(),this.setFormListener()}setFormListener(){const e=this.querySelector("form");e.addEventListener("submit",(async t=>{t.preventDefault(),await R.request("/auth","POST",{body:JSON.stringify(Object.fromEntries(new FormData(e).entries()))}),location.href="/app"}))}render(){w(b`
			<form>
				<label>
					<span>Identifiant</span>
					<input name="id" required type="text">
				</label>
				<label>
					<span>Mot de passe</span>
					<input name="password" required type="password">
				</label>
				<button type="submit">
					<span>Envoyer</span>
				</button>
			</form>
		`,this)}}class ye extends HTMLElement{get choiceMode(){const e=this.getAttribute("choiceMode");return null!==e?e:null}set choiceMode(e){e?this.setAttribute("choiceMode",e):this.removeAttribute("choiceMode")}async connectedCallback(){this.categories=await R.request("/db","POST",{body:'{ "getCategories": "" }'}),this.render()}resetMode(){this.editMode=null,this.render()}async editAndSaveCategory(e,t){const s="INPUT"===e.target.tagName?e.target:e.target.closest("button").previousElementSibling;s&&s.value&&(this.categories=await R.request("/db","POST",{body:`{ "setCategory": { "title": "${s.value}"${t?`, "id": "${t}"`:""} } }`}),s.value="",this.resetMode())}async removeCategory(e){R.confirm(b`<h3>Voulez-vous vraiment supprimer ?</h3>`,(async()=>{this.categories=await R.request("/db","POST",{body:`{ "removeCategory": "${e}" }`}),this.render(),R.toast("success","Catégorie supprimée")}))}render(){this.categories.sort(((e,t)=>e.title.localeCompare(t.title))),w(b`
			${null===this.choiceMode?b`<h2>Liste des catégories</h2>`:""}
			<aside>
				<nav>
					<ul>
						<li>
							${null===this.choiceMode?b`
										<div class="addCategory grid">
											<input name="newCategory" type="text" @keyup="${e=>{"Enter"===e.key&&this.editAndSaveCategory(e)}}"/>
											<button type="button" class="add" @click="${e=>this.editAndSaveCategory(e)}">
												<svg class="add">
													<use href="#add"></use>
												</svg>
												<span>Ajouter une catégorie</span>
											</button>
										</div>
									`:""}
						</li>
						${this.categories.length?this.categories.map((e=>{const t=e.title,s=e._id;return null!==this.choiceMode?b`
										<label for="${s}">
											<input type="radio" id="${s}" name="category" value="${t}" .checked="${this.choiceMode===s}"
												   @change="${()=>document.body.dispatchEvent(new CustomEvent("modalConfirm",{detail:{id:s,title:t}}))}">
											${t}
										</label>
									`:b`
										<li>
											<div class="editCategory ${this.editMode===s?"grid":""}">
												${this.editMode===s?b`
													<input name="editCategory" required type="text" value="${t}" @keyup="${e=>{"Enter"===e.key&&this.editAndSaveCategory(e,s),"Escape"===e.key&&this.resetMode()}}"/>`:b`
													<span>${t}</span>
												`}
												${this.editMode===s?b`
													<button class="valid" @click="${e=>this.editAndSaveCategory(e,s)}">
														<svg class="valid">
															<use href="#valid"></use>
														</svg>
														<span>Valider</span>
													</button>
												`:b`
													<button class="edit" @click="${()=>{this.editMode=s,this.render()}}">
														<svg class="edit">
															<use href="#edit"></use>
														</svg>
														<span>Modifier</span>
													</button>
												`}
												${this.editMode===s?b`
													<button type="button" class="undo" @click="${()=>this.resetMode()}">
														<svg class="undo">
															<use href="#undo"></use>
														</svg>
														<span>Annuler</span>
													</button>
												`:b`
													<button type="button" class="remove" @click="${()=>this.removeCategory(s)}">
														<svg class="remove">
															<use href="#remove"></use>
														</svg>
														<span>Supprimer</span>
													</button>
												`}
											</div>
										</li>
									`})):b`
							<li>Aucune catégorie ...</li>`}
					</ul>
				</nav>
			</aside>
		`,this)}}class $e extends HTMLElement{get height(){return this.getAttribute("height")}connectedCallback(){this.style.cssText=`height: ${this.height||8e3}px; position: relative;display: block;`,this.animations=Array.from(this.querySelectorAll("*")).reduce(((e,t)=>{const s=`${t.tagName}.${t.className}`;return Array.from(t.attributes).forEach((i=>{if(i.name.includes("data")){e[s]||(e[s]=[]);const n=i.name.split("-");e[s].push({element:t,lowValue:Number(n[1]),highValue:Number(n[2]),animations:i.value})}})),e}),{});const e=Array.from(this.children);this.render(),this.querySelector("slot").replaceWith(...e),document.body.addEventListener("scroll",(()=>this.scrollListener())),this.scrollListener()}scrollListener(){const e=document.body.getBoundingClientRect(),t=this.getBoundingClientRect();if(e.height<t.height){const s=(e.y-t.y)/(t.height-e.height);this.setAnimations(s)}}setAnimations(e){Object.values(this.animations).forEach((t=>{for(const s of t)(e>=s.lowValue&&e<s.highValue||0===s.lowValue&&e<s.lowValue)&&(s.element.style=s.animations.replaceAll("§§proportion§§",`${e}`))}))}render(){w(b`
			<div style="height: ${window.innerHeight}px; position: sticky; top: 0;">
				<slot></slot>
			</div>
		`,this)}}class Ae extends HTMLElement{static get observedAttributes(){return["visible"]}get visible(){return this.hasAttribute("visible")}set visible(e){e?this.setAttribute("visible",""):this.removeAttribute("visible")}connectedCallback(){this.render(),this.style.display="none"}attributeChangedCallback(e,t,s){"visible"===e&&t!==s&&(""===s&&(this.style.display="",setTimeout((()=>this.render()),20)),null===s&&(this.style.display="none",setTimeout((()=>this.render()),20)))}render(){w(b`
			<div class="spinner"></div>`,this)}}class we extends HTMLElement{get loadingTimer(){return Number(this.getAttribute("loadingTimer"))}constructor(){super(),this.style.visibility="hidden"}connectedCallback(){R.loader(!0),setTimeout((()=>{R.loader(!1),this.style.visibility="visible"}),this.loadingTimer)}render(){w(b`
			<slot></slot>
		`,this)}}class Ce extends HTMLElement{async connectedCallback(){this.week=["Lundi","mardi","Mercredi","Jeudi","Vendredi","Samedi","Dimanche"],this.calendar={Midi:this.week,Soir:this.week};const e=await R.request("/db","POST",{body:'[{ "getDishes": "" }, { "getIngredients": "" }]'});this.dishes=e[0],V.savedIngredients=e[1],this.refresh()}openModal(e,t,s){e.target.closest("details").removeAttribute("open"),document.body.addEventListener("modalConfirm",(e=>{this.dishName=e.detail.dishName||e.detail.title,this.dishId=e.detail.choices&&e.detail.choices[0]||null})),R.confirm(s?b`
			<label for="firstname">
				<input type="text" value="${t?.name}" @input="${e=>document.body.dispatchEvent(new CustomEvent("modalConfirm",{detail:{dishName:e.target.value}}))}"/>
			</label>
		`:b`
			<fs-recipes choiceMode="radio"/>
		`,(async()=>{if(this.dishName){if(!s){const e=V.savedIngredients.filter((e=>e.recipes&&e.recipes.length&&e.recipes.some((e=>this.dishId===e)))).map((e=>({title:e.title,category:e.category})));await R.request("/db","POST",{body:`{ "setListIngredients": { "ingredients": ${JSON.stringify(e)} } }`})}t.name=this.dishName,this.dishes=await R.request("/db","POST",{body:`{ "setDish": ${JSON.stringify(t)} }`})}this.dishName="",this.refresh()}))}refresh(){this.dishesByCalendar=this.dishes.reduce(((e,t)=>(e[t.time]=e[t.time]??{},e[t.time][t.day]=e[t.time][t.day]??{},e[t.time][t.day]=t,e)),{}),this.render()}clear(){R.confirm(b`<h3>Voulez vous effacer les plats de la semaine ?</h3>`,(async()=>{this.dishes=await R.request("/db","POST",{body:'{ "clearDishes": "" }'}),this.refresh()}))}render(){w(b`
			<div class="title">
				<h2>Les plats de la semaine</h2>
				<button type="button" class="trash" @click="${()=>this.clear()}">
					<svg class="trash">
						<use href="#trash"></use>
					</svg>
					<span>Vider</span>
				</button>
			</div>
			<div class="content">
				<div class="grid">
					<div>#</div>
					${this.week.map((e=>b`
							<div>${e}</div>
						`))}
				</div>
				${Object.entries(this.calendar).map((([e,t])=>b`
						<div class="grid">
							<div>${e}</div>
							${t.map((t=>{const s=(this.dishesByCalendar[e]&&this.dishesByCalendar[e][t])??{time:e,day:t};return b`
									<details role="list">
										<summary aria-haspopup="listbox" role="button">${s.name}</summary>
										<ul role="listbox">
											<li>
												<button @click="${e=>this.openModal(e,s,!0)}">Éditer</button>
											</li>
											<li>
												<button @click="${e=>this.openModal(e,s)}">Ajouter</button>
											</li>
										</ul>
									</details>
								`}))}
						</div>
					`))}
			</div>
		`,this)}}new class{constructor(){this.setBackButton(),R.helpers(),this.wakeLock();const e=document.querySelector("#main");document.querySelectorAll(".home a").forEach((t=>{t.addEventListener("click",(async s=>{s.preventDefault();const i=t.href;history.pushState({},"",i),console.log(i);const n=await R.request(i,"GET",{},"text");e.innerHTML="",e.appendChild(this.createElementFromHTML(n)),document.body.className="dishes",document.querySelector(".subtitle").innerHTML="Les plats de la semaine"}))})),window.onpopstate=async()=>{const t=await R.request(location.pathname,"GET",{},"text");console.log(t),e.innerHTML="",e.appendChild(this.createElementFromHTML(t))}}createElementFromHTML(e){const t=document.createElement("div");return t.innerHTML=e.trim(),t.firstChild}async wakeLock(){let e=null;const t=async()=>{try{e=await navigator.wakeLock.request()}catch(e){console.error(`${e.name}, ${e.message}`)}};document.addEventListener("visibilitychange",(async()=>{null!==e&&"visible"===document.visibilityState&&await t()})),await t()}setBackButton(){if(location.pathname.split("/").filter((e=>e)).length&&history.length>2){const e=B.newDom(document.querySelector("fs-header > div:first-child"));e.elt("a","back").att("role","button").att("href","#").listen("click",(()=>history.back())),e.svg("back").up(),e.elt("span").text("Retour").up(),e.up()}}},customElements.define("fs-loader",Ae),customElements.define("fs-header",fe),customElements.define("fs-toast",H),customElements.define("fs-confirm",D),customElements.define("fs-propose",q),customElements.define("fs-recipes",W),customElements.define("fs-recipe",z),customElements.define("fs-lists",ve),customElements.define("fs-ingredients",j),customElements.define("fs-categories",ye),customElements.define("fs-login",be),customElements.define("fs-loading-block",we),customElements.define("fs-animated-section",$e),customElements.define("fs-dishes",Ce);
